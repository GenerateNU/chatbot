{
  "Questions": [
    {
      "id": 1,
      "Question": "How to run an all team meeting?",
      "Answer": "Each lead updates the whole team on immediate and upcoming priorities. PL shares important features, what features and deadlines are upcoming. Each squad shares progress on their current feature, PL updates backlog to reflect progress. Squads allocate themselves to new features (as makes sense). Features ≠ Enablers; Features are work to be done that contributes to the end product. Enablers are work that contributes to the teams future ability to complete work. In each squad, required alignment takes place to understand needs between design and engineering to deliver their assigned feature(s). Squads consult DL/TL for technical guidance, PL for business guidance.",
      "Context": "Example Agenda (30 mins) Bonding activity (10 mins) Priority updates (5 mins) Each lead updates the whole team on immediate and upcoming priorities. PL shares important features, what features and deadlines are upcoming. Feature updates / assignment (5 mins) Each squad shares progress on their current feature, PL updates backlog to reflect progress Squads allocate themselves to new features (as makes sense) Features ≠ Enablers; Features are work to be done that contributes to the end product. Enablers are work that contributes to the team's future ability to complete work. Alignment time for squads (10 mins) In each squad, required alignment takes place to understand needs between design and engineering to deliver their assigned feature(s). Squads consult DL/TL for technical guidance, PL for business guidance.",
      "branch": "Software",
      "topic": "Running an All-team Meeting"
    },
    {
      "id": 2,
      "Question": "How to run an Engineering Meeting",
      "Answer": "Team discusses most important Enablers to build, allocate work on building amongst themselves. Features ≠ Enablers; Features are work to be done that contributes to the end product. Enablers are work that contributes to the team's future ability to complete work. Review any code being merged from Feature branches into Dev; team discusses how to improve code and design quality Blocker removal (5+ mins, team members may leave if they have no out-standing blockers) Team members discuss any blockers which need to be removed so that the engineers can continue to complete work",
      "Context": "Example Agenda (45 mins) Enabler prioritization and assignment (10 mins) Team discusses most important Enablers to build, allocate work on building amongst themselves. Features ≠ Enablers; Features are work to be done that contributes to the end product. Enablers are work that contributes to the team's future ability to complete work. Code review (30 mins) Review any code being merged from Feature branches into Dev; team discusses how to improve code and design quality Blocker removal (5+ mins, team members may leave if they have no out-standing blockers) Team members discuss any blockers which need to be removed so that the engineers can continue to complete work",
      "branch": "Software",
      "topic": "Running an Engineering Meeting"
    },
    {
      "id": 3,
      "Question": "How to run a design meeting?",
      "Answer": "Any required brand work is assigned, reviewed, discussed, and assigned. Each designer shares the work they completed in the past week and others share area for improvement in addition to positive feedback. Next steps: Any decisions required to complete the next week's work are made before designers leave.",
      "Context": "Agenda (1 hour) Brand work (15 mins) Any required brand work is assigned, reviewed, discussed, and assigned. Features ≠ Enablers; Features are work to be done that contributes to the end product. Enablers are work that contributes to the team's future ability to complete work. Critique (45+ mins) Each designer shares the work they completed in the past week and others share area for improvement in addition to positive feedback. Next steps: Any decisions required to complete the next week's work are made before designers leave.",
      "branch": "Software",
      "topic": "Running a Design Meeting"
    },
    {
      "id": 4,
      "Question": "How to run a leads meeting?",
      "Answer": "PL updates DL and TLs on client developments and feedback from client based on work showcased. DL updates TLs and PL on design progress and clarifies any needs from PL and TLs. TLs update DL and PL on implementation progress and clarify any needs from PL and DL.",
      "Context": "Agenda (15 mins) PL updates DL and TLs on client developments and feedback from client based on work showcased (5 mins) DL updates TLs and PL on design progress and clarifies any needs from PL and TLs (5 mins) TLs update DL and PL on implementation progress and clarify any needs from PL and DL (5 mins)",
      "branch": "Software",
      "topic": "Running a Leads (PL/TL/DL) Meeting"
    },
    {
      "id": 5,
      "Question": "What is the suggested meeting cadence?",
      "Answer": "All-team: Weekly, Engineering: Weekly, Design: Weekly, Leads: Weekly, Working Session: As needed",
      "Context": "| --- | --- | --- | --- | --- | | All-team | Weekly | 30 mins | All team members | Whole team aligns, eradicates shared blockers, bonds || Engineering | Weekly | 15-60 mins | All engineers, PL optional| Engineers remove technical blockers, agree new on necessary tech enablers (automations, CI/CD fixes, standards, etc.), conduct code review| | Design | Weekly | 60+ mins | All designers, PL optional| Share completed assignments, receive feedback, brainstorm ideas, make design decisions to move forward,assign new work || Leads | Weekly | 10-30 mins | PL, TLs, DL | Leads align on progress, requirements, next work priorities || Working Session | As needed | 120+ mins | All team members, PL optional| Team completes allocated work. User testing. |",
      "branch": "Software",
      "topic": "Suggested Meeting Cadence"
    },
    {
      "id": 6,
      "Question": "How to structure a team for collaboration?",
      "Answer": "Feature Squads are made of at least one designer, one frontend-focused developer, and one backend-focused developer. Together, these cross-disciplinary teams complete Stories, written by the PL, (aka Features). Engineering/Design Chapters are made of either all the engineers or all the designers on a team. Together, Chapters work on Enablers, written by the TLs/DL, to complete work which helps the team better complete its work. This can include Brand Identity, Logos, Typography, Figma Component/Swatch setup, on the design side, and CI/CD, linting, automations, system architecture design, etc. on the engineering side.",
      "Context": "Below is a diagram of how teams are set up into multiple streams to complete work for the project. Feature Squads are made of at least one designer, one frontend-focused developer, and one backend-focused developer. Together, these cross-disciplinary teams complete Stories, written by the PL, (aka Features). Engineering/Design Chapters are made of either all the engineers or all the designers on a team. Together, Chapters work on Enablers, written by the TLs/DL, to complete work which helps the team better complete its work. This can include Brand Identity, Logos, Typography, Figma Component/Swatch setup, on the design side, and CI/CD, linting, automations, system architecture design, etc. on the engineering side. The goal of this model is to get people to work together better than if each of them worked alone. Over management and/or bad management means people do less than they could have alone. On the flip-side, \"just enough\" management means people do their best (and feel their best doing it)",
      "branch": "Software",
      "topic": "Team Structure for Collaboration"
    },
    {
      "id": 7,
      "Question": "How to run a frontend design audit?",
      "Answer": "Engineers complete the development of the Feature. Engineers notify the designer and set up a time to Demo and review. Designer and Engineer walk through the completed feature together, alongside the Figma designs, and identify necessary improvements (as required): → Necessary improvements are noted and added to the Squad's backlog for the next week → If an improvement is deemed too time-intensive, the proposed changes can be discussed with Leads, Chiefs, and other team members. The designer approves the implementation and the feature is merged into Production (assuming it also meets code quality standards).",
      "Context": "Before any Features are merged from Development → Production they should undergo a Design Audit: Engineers complete the development of the Feature. Engineers notify the designer and set up a time to Demo and review Designer and Engineer walk through the completed feature together, alongside the Figma designs, and identify necessary improvements (as required): → Necessary improvements are noted and added to the Squad's backlog for the next week → If an improvement is deemed too time-intensive, the proposed changes can be discussed with Leads, Chiefs, and other team members. The designer approves the implementation and the feature is merged into Production (assuming it also meets code quality standards). This is a perfect use of Squad meetups in team meetings, or team channels for members to show their work and receive feedback on it. Note: if doing this in a team meeting, having a paper trail is a great way to make sure all the feedback is adequately recorded",
      "branch": "Software",
      "topic": "Running a Frontend ↔ Design Audit"
    },
    {
      "id": 8,
      "Question": "How can teams help eachother out?",
      "Answer": "Request design QA as needed and in advance. A component library is built into a Figma page since it makes it simpler to translate designs to implementation. Mockups are shared early and often so that engineering work can begin setting up while design work moves to polishing-focused stages. Even when not included in the designs, it's useful to have discussions of additional user interactions such as animation, hover states, etc. which can be added to components and implemented across the project to \"bring it to life\". Endpoints remain stable in both setup and contents, and mask implementation details, so that changes to the backend do not impact the frontend. Types (where possible) are shared across the codebase to remove complexity and need for duplication of work. Important to have a shared understanding of how data is likely to expand in scope over time",
      "Context": "Changes other members of the team can make which impact designers: Request design QA as needed and in advance. Changes other members of the team can make which impact frontend-focused developers: A component library is built into a Figma page since it makes it simpler to translate designs to implementation Mockups are shared early and often so that engineering work can begin setting up while design work moves to polishing-focused stages Even when not included in the designs, it's useful to have discussions of additional user interactions such as animation, hover states, etc. which can be added to components and implemented across the project to \"bring it to life\" Endpoints remain stable in both setup and contents, and mask implementation details, so that changes to the backend do not impact the frontend Types (where possible) are shared across the codebase to remove complexity and need for duplication of work. Changes other members of the team can make which impact backend-focused developers: Important to have a shared understanding of how data is likely to expand in scope over time.",
      "branch": "Software",
      "topic": "Design ↔ Frontend ↔ Backend Impacts"
    },
    {
      "id": 9,
      "Question": "How to write and assign features and enablers?",
      "Answer": "When writing Stories/Tickets, describe outcomes instead of prescribing methods. When it comes to allocating work, do not assign specific people specific tickets. Instead, let them pick tickets which they want to learn from/feel prepared to complete. If nobody wants to pick up a Feature Story/Enabler Ticker, then it either needs to be broken down further, spiked (researched to be broken down), or nobody views it as important and thus you need to sell the importance better or realize it's not valuable (and then cancel it and communicate its cancellation to your client). Empower the talented people you hire and lean on them to make key decisions and guide your project.",
      "Context": "When writing Stories/Tickets, describe outcomes instead of prescribing methods. For example, A) \"Make a thing that does this, here's some possible approaches if you're really stuck on where to start\" is markedly better than B) \"Do x y then z\". A describes a desired outcome which the Squad can think critically about how to achieve. B describes an output which requires no complex thought to achieve and stifles autonomy and creativity, as such preventing your team from achieving their full potential. When it comes to allocating work, do not assign specific people specific tickets. Instead, let them pick tickets which they want to learn from/feel prepared to complete. If nobody wants to pick up a Feature Story/Enabler Ticker, then it either needs to be broken down further, spiked (researched to be broken down), or nobody views it as important and thus you need to sell the importance better or realize it's not valuable (and then cancel it and communicate its cancellation to your client). Empower the talented people you hire and lean on them to make key decisions and guide your project",
      "branch": "Software",
      "topic": "Writing and Assigning Features (Stories) and Enablers (Tickets)"
    },
    {
      "id": 10,
      "Question": "Figma to Dev Handoff Best Practices",
      "Answer": "Make sure the front-end devs on your team have Figma access. If they do not, collect their emails and either: Give them can view access on Figma. Send the emails to the Chief Designer who will deal with permissions. Once the lofis for a feature are complete, move those screens (and any accompanying prototyping) to a new page titled: Feature Name: lofis. (ShowNxt example: Coach Signup: lofis) This consistent naming convention is important so your devs know where to look for designs! Use the Auto Flow Plug-in to draw connections between screens so your devs will understand the flows better. Let your team know what lofis are ready to dev! Steps for Front-End Development: Once designers let you know a feature is ready for development, open the Figma file (either within the desktop app or in a browser). If the design is ready for development, the designs will be found on the page named: Feature Name: lofis or Feature Name: hifis. This means the designers are done making adjustments to these screens. Navigate to the page you will be developing (using the left side panel)",
      "Context": "Whether you are a PL looking to scope out Figma dev for your team or a software developer looking for resources, this is the place to be! TLDR; Really great info about Figma developer handoff: https://www.figma.com/best-practices/guide-to-developer-handoff/ Feel free to browse this example file to see Figma's can view capabilities: https://www.figma.com/file/ewVdWlAd3ZZ3lZSWBaTWZn/Generate:-Dev-Handoff-Example?node-id=0%3A1 Step-by-step Guide: Steps for Design Handoff: Make sure the front-end devs on your team have Figma access. If they do not, collect their emails and either: Give them can view access on Figma Send the emails to the Chief Designer who will deal with permissions Once the lofis for a feature are complete, move those screens (and any accompanying prototyping) to a new page titled: Feature Name: lofis ShowNxt example: Coach Signup: lofis This consistent naming convention is important so your devs know where to look for designs! Use the  Auto Flow Plug-in to draw connections between screens so your devs will understand the flows better Let your team know what lofis are ready to dev! Steps for Front-End Development: Once designers let you know a feature is ready for development, open the Figma file (either within the desktop app or in a browser) If the design is ready for development, the designs will be found on the page named: Feature Name: lofis or Feature Name: hifis This means the designers are done making adjustments to these screens Navigate to the page you will be developing (using the left side panel) BEST PART: Select the frame (A.K.A. art board) you are working on, and using the code panel (on the right-side of the screen) you have the opportunity to view code for CSS, iOS (Swift), and Android (XML) and any descriptions added to components. You also have the ability to export any assets from the file using the Export feature THIS CODE IS NOT MEANT TO BE DIRECTLY COPY & PASTED, IT SHOULD BE USED AS A HELPFUL RESOURCE Video for overview: https://youtu.be/B242nuM3y2s Components:Component usage is very important for both efficient design and development practices. Designers should be using components to build out their designs. (A.K.A. symbols in sketch) Definition: Components are elements you can reuse across your designs. They help to create and manage consistent designs across projects. You can create components from any layers or objects you've designed. These could be a whole range of things like buttons, icons, layouts, and more. https://help.figma.com/hc/en-us/articles/360038662654-Guide-to-Components-in-Figma#:~:text=Components are elements you can,icons%2C layouts%2C and more. In other words: Components are like puzzle pieces. A designer creates components, and reuses them as pieces of the design. If used correctly, developers should be able to create and style the components, and reuse them throughout the development process Useful Video: https://youtu.be/k74IrUNaJVk?list=PLXDU_eVOJTx5LSjOmeBYMuvaa4UayfMe4 ‼  Designers  ‼ If you haven't implemented components yet, it's okay! But it is important for you to transition your designs to be component-based. If you are unsure of how to do this, here are some great resources to use to learn about all things component-based design! Figma.com's resources Figma defines component best practices Introduction to component variants Auto Layout intro video There are so many capabilities built into components!!!! I encourage you to learn more about using auto layout, creating variants, and swapping out components easily. If you struggle with something in Figma, chances are someone has also struggled with the same thing. The internet and figma.com have some really awesome resources to help make your design process more efficient! (P.S. reach out to your Chief Designer with any questions, they would love to help!)",
      "branch": "Software",
      "topic": "Figma → Dev Handoff: Best Practices"
    },
    {
      "id": 11,
      "Question": "What is Generate's values?",
      "Answer": "Generate members are innovative, driven, empathetic, spirited, and growth-oriented. In addition, the Sherman Center values are developmental, inclusive, and intentional.",
      "Context": "Mission\nGenerate is a community of passionate individuals who engage in collaborative, real-world experiences to develop innovative products, the organization, its partners, and themselves.\nValues\nEverything in the Sherman Center must align by three values— being developmental, inclusive, and intentional.\nIn addition, Generate members are innovative, driven, empathetic, spirited, and growth-oriented.\nPriorities\nStructural Resilience\nIncrease the accessibility of leadership positions by distributing responsibilities across more of our members. Further support and foster member growth at all levels of Generate.\nOrganizational Identity\nCreate a stronger sense of belonging within teams and branches for all members. Increase the flow of feedback between members and leadership.\nOutcome Delivery\nContinue to improve our member's learning and our project quality to ensure we can keep and capture talent and resources to ensure the organization's continued success and longevity.",
      "branch": "all generate",
      "topic": "generate values"
    },
    {
      "id": 12,
      "Question": "What is the Flexible Spending Pool?",
      "Answer": "The Flexible Spending Pool (FSP) is a fund that allows members to request reimbursement for expenses related to their Generate work and standard team morale, excluding hardware projects.",
      "Context": "This Spring, we are introducing the Flexible Spending Pool (FSP) which will be applied to all expenses, excluding hardware project materials and standard team morale expenses. \n\nBy implementing zero-based budgeting, we aim to:\n\n- Optimize Resource Allocation\n- Enhance transparency and predictability in budgeting decisions\n- Ensure spending aligns with Generate's missions and values",
      "branch": "all generate",
      "topic": "flexible spending pool"
    },
    {
      "id": 13,
      "Question": "2+2?",
      "Answer": "2+2 is 4. Do you have any Generate related questions?",
      "Context": "2+2=4",
      "branch": "non generate",
      "topic": "non generate"
    },
    {
      "id": 14,
      "Question": "How do I submit a request for the Flexible Spending Pool?",
      "Answer": "Expense proposals should be submitted at least 10 days in advance. Please submit requests through the Expense Request Google Form (https://docs.google.com/forms/d/e/1FAIpQLSfFJHEE40j41X93_qsC7Xudgagn7WOwYMytUZUbcPG_fqN33w/viewform). The form will be reviewed by the Finance team within one week using a evaluation criteria. You will receive a reponse with the decision via Slack.",
      "Context": "1. Identify Team Goals: Teams should identify their goals at the start of the semester and routinely track and evaluate their effectiveness.\n2. Anticipate Expenses: Expenses must be proposed **AT LEAST** 10 days in advance. Expense proposals can be submitted through this form: (https://docs.google.com/forms/d/e/1FAIpQLSfFJHEE40j41X93_qsC7Xudgagn7WOwYMytUZUbcPG_fqN33w/viewform). This form can also be found in the sidebar of the FinOps Dashboard under \"Quicklinks\".\n3. Proposal Review: Proposals will then be evaluated against a predefined set of evaluation criteria within one week, during weekly Procurement meetings: Tuesday and Thursday evenings.\n4. Final Decision and Tracking: A final approval, approval with modification, or rejection will be communicated via Slack.\n\n Please note that we are unable to process purchases of gift cards",
      "branch": "all generate",
      "topic": "flexible spending pool"
    },
    {
      "id": 15,
      "Question": "How do I get access to the Sherman Center?",
      "Answer": "First, please check if it's an issue only with your access or with everyone's access. It it's an issue with your access, log onto the Generate FinOps Dashboard (https://finops.generatenu.com/) to check if you've been added to the access list for spaces. If the dashboard says you have access, but you can't get in, please send a message in the #ops-help Slack channel and mention which space you are having trouble accessing. If it's an issue with everyone's access, and the keycard isn't flashing green or red or beeping when the card is read, please send a message in the #ops-help Slack channel and submit a work request form (https://service.northeastern.edu/facilities?id=sc_cat_item&sys_id=5a565f8187e64d50d9b1dc6d3fbb35f4)",
      "Context": "If you notice a keycard reader isn't working,\nplease let someone know\nso we can diagnose the issue and quickly resolve it. A few things to try to help escalate …\nUnderstand if it's an issue with\nyour\naccess\n, or with\neveryone's\naccess\n:\nIf it's an issue with your access, please log into the\nGenerate Ops Dashboard\nto check if you have been added to the access list for the spaces. This issue is common at the start of a semester.\nIf the Dashboard says you have access, but you are experiencing an issue that no one else is, please send a message in\n#ops-help\non Slack. Be sure to mention the space you are trying to access and what behavior you are seeing.\nIf others also have the issue, and the keycard reader is\nnot flashing red or green or making a beep when reading a card\n, it's likely the reader is\nout of battery\n.\nIn this case:\nPlease send a message in\n#ops-help\non Slack\nAdditionally, please\nsubmit a work request\nhere\n:\nProblem Type:\nLocks, Keys and Card Access\nCampus:\nBoston\nBuilding name:\nHayden\nFloor:\n0 | Basement\nRoom number:\n008 | Private Circulation Area\nLocation within room:\nFront door\nDescription:\nDoor keycard reader requires AD400 battery change.\nThank you for helping us maintain access to the space!",
      "branch": "all generate",
      "topic": "Sherman Center Access"
    },
    {
      "id": 16,
      "Question": "How do I submit a reimbursement for Hardware materials?",
      "Answer": "Project materials should never be paid out-of-pocket. All order request should be submitted through the FinOps Dashboard (https://finops.generatenu.com/) and the order will be reviewed and placed by the FinOps team.",
      "Context": "Over the course of your time in Generate, you will likely need to purchase\nsomething\n. Perhaps a tool for a hardware project, stickers for an engagement event, a subscription for a software client, or catering for a morale event.\nThis guide is designed to help you understand our policies and procedures for making Generate-related purchases. If you have questions, ASK! → `#ops-help` on Slack.\nProcurement / Online Orders\nKey Takeaways:\n- All orders/procurement requests must be submitted via our FinOps Dashboard.\n- Plan ahead and know what items will need to be purchased as soon as possible. See When are orders placed? to ensure your orders are submitted on-time.\n- Routinely connect with your lead to ensure that your team's resources are effectively allocated and in-line with your needs.\n- If you are a Director, Chief, or Lead, please make sure you also familiarize yourself with Digital Stewardship\n- TO SUBMIT AN ORDER, submit a request through our FinOps Dashboard.\nFAQs:\nWhat are our supported vendors?\nSupported vendors must be used whenever possible. We have tax-free accounts set up with these services and your items will be processed and arrive faster.\neBay is no longer a supported vendor.\n4imprint\nAdafruit\nAmazon\nAndyMark\nArduino\nCustom Ink\nDigiKey\nEasyEDA\nEdmund Optics\nFormlabs\nHarbor Freight\nHome Depot\nMcMaster-Carr\nMisumi\nMouser Electronics\nProlabs\nProtolabs\nSendCutSend\nServoCity\nSparkfun\nStepper Online\nSticker Mule\nULINE\nUS Plastics\nVevor\nVex Robotics\nVistaprint\nWaveShare\nXometry\nWhat if I want to place orders from other vendors?\nPlease use custom orders sparingly as they take much more time to set up.\nIn some cases, we are not able to order from certain vendors. See \"\nHow does tax-exemption work?\n\" above for one potential issue.\nBe aware that issues are common with custom orders.\nWhen are orders placed?\nThe Fall 2024 schedule requires all procurement/order requests to be submitted by\n7:30pm every Tuesday and Thursday\nto ensure same-day ordering. Reach out in\n#ops-help\non Slack with any questions in the meantime.\nAny orders not received on time will be submitted at the next scheduled date.\nWhere are orders shipped? Can my order be shipped to me?\nOrders may only be mailed to the Sherman Center. If necessary, orders may be shipped to the relevant lead following approval from Generate's CFO or Operations Director.\nHow does tax-exemption work?\nAs a part of Northeastern University—and therefore the Sherman Center—we are tax-exempt\n.\nIf a company is unwilling to remove sales tax, we cannot order from them. No exceptions.\nWhat if I have an urgent order? / I need something ASAP!\nAn order is \"urgent\" if there is a legitimate, justifiable reason that it absolutely cannot wait to be placed until the next order date. See\nWhen are orders placed?\nIf the need for an urgent order arises, reach out in\n#ops-help\non Slack explaining the situation. Be sure to tag\nboth\nGenerate's Operations Director and Chief Financial Officer. They will determine whether the urgent order is necessary.\nThe Operations Director and CFO reserve the right to deem orders as urgent or non-urgent in their sole discretion.\nIn most cases, weekend and holiday orders cannot be expedited due to the business nature of most vendors we utilize. Please consider this in your urgent request before reaching out.\nHow do I process a return?\nPolicies and timelines vary by vendor. The receiving team is responsible for notifying Operations on Slack (\n#ops-help\n) about the return to obtain the necessary labels. Please provide the original order ID and a description of all items to be returned. The receiving team is responsible for boxing and shipping out the return.\nReimbursements\nGenerally, all morale purchases must be paid for out-of-pocket and then reimbursed.\nProject materials should\nnever\nbe bought out-of-pocket.\nKey Takeaways:\n- Reimbursements requests must be submitted within 14 days of purchase.\n- Keep your itemized receipt! Without it, you cannot be reimbursed.\n- Reimbursements over $75 require prior approval from Generate's CFO or Operations Director, unless morale-related.\n- Failure to do so may result in rejection of your reimbursement request.\n- Pay attention, and triple check your requests. Incomplete, inaccurate, or late submissions may be rejected and non-reimbursable.\n- TO SUBMIT A REIMBURSEMENT, submit a request through our FinOps Dashboard.\nFAQs:\nWhat can be reimbursed?\nMorale\n: Unless otherwise communicated, all\nmorale\nexpenses should be paid out-of-pocket and reimbursed by Generate.\nUrgent Project Materials\n:\nIf approved by your Director\n, urgent project materials\n$75 or less\nmay be purchased out-of-pocket and reimbursed by Generate. Urgent project materials over $75 must be approved by Generate's CFO or Operations Director.\nAll other project material purchases must flow through our standard procurement policies\n.\nWhat is required?\nReimbursement Requests must…\nbe submitted\nwithin 14 days\nof the purchase.\ninclude a\nPDF\nof an\nitemized receipt\nshowing the vendor name, purchase date, items purchased, total price, and payment method.\nPlease take 2 extra seconds to find a clean and flat surface, take a clear picture, and crop photos to show just the receipt.\nHow long do reimbursements take?\nReimbursement requests take time. They must be processed by Generate, the Sherman Center, and Northeastern University, as well as either the USPS (physical checks are mailed if you don't have direct deposit set up) or your bank.\nPlease be patient; this process usually takes\n3-4 weeks\n.\nQuestions or Issues?\nReach out in\n#ops-help\non Slack. We're here to help!",
      "branch": "hardware",
      "topic": "reimbursement"
    },
    {
      "id": 17,
      "Question": "Who was the first president of the U.S.?",
      "Answer": "The first president of the U.S. was George Washington. Do you have any Generate related questions?",
      "Context": "The first president of the U.S. was George Washington.",
      "branch": "non generate",
      "topic": "non generate"
    }
  ]
}