{
  "PCB Design: Best Practices": {
    "author": "Aaliyah Yan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Development Resources (Development%20Resources%2014bf18dd5a9480dcb4cbfec87e0cb38b.md)",
    "content": "Preface\nThis Confluence page is meant to serve as an introductory guide into the creation and manufacturing of PCB’s (Printed Circuit Boards). This guide will show you best practices and guidelines to follow when creating a PCB after completing a schematic.\n1. Introduction\nWhen creating a PCB, it is important to follow certain practices to ensure that the final product is reliable, functional, and safe. The PCB manufacturing process typically involves designing the PCB layout, selecting components, assembling the board, and testing/validating the final product.\nThis step should FOLLOW the creation/completion of a schematic. This is to ensure that you can import all the parts needed to meet product specifications.\n2. Design Considerations\nDesigning a PCB layout that is optimized for manufacturing and reliability is crucial for the success of a project. Here are some design considerations to keep in mind:\nPCB Layout Guidelines\nUse standard PCB footprints to ensure compatibility with PCB assembly equipment\nMinimize the number of vias and keep them away from sensitive components to avoid signal interference/noise\nPlace decoupling capacitors close to the power pins of their respective components to reduce noise and voltage fluctuations\nProper decoupling capacitor placement. It is important to also reference a ground plane through something called a “via”, which is a hole to another layer of the board\nComponent Selection\nChoose components that are rated for the desired operating conditions (temperature, voltage, etc)\nConsider the availability and cost of components when selecting them\nUse components from reputable manufacturers to ensure quality and reliability\nThermal Management\nProper thermal management is essential for components that generate heat, such as power amplifiers, voltage regulators, and microprocessors\nConsider the use of thermal vias, heat sinks, and thermal pads to dissipate heat and maintain component temperatures within safe operating limits\nEMI/RFI Considerations\nMinimize the length of traces carrying high-frequency signals to reduce electromagnetic interference (EMI) and radio-frequency interference (RFI)\nUse shielding techniques such as grounded metal cans or shielding tape to reduce EMI/RFI\nDon’t route traces with 90 degree bends in them\n3. Assembly Process\nThe assembly process involves soldering the components to the PCB and ensuring that the board is functional and meets the required quality standards.\nFor simpler boards, assembly can be done by hand, with the engineer soldering all of the components to the board. However, for more complex boards, it becomes much harder/impossible to hand-solder certain components. In situations like these, assembly will be done by an assembly house.\nSoldering Techniques\nUse a high-quality solder paste with the correct particle size for the components being soldered\nUse a consistent and repeatable soldering process to ensure consistent quality\nConsider the use of solder paste stencils to apply a precise amount of solder paste to each component\nQuality Control\nPerform inspections (either visual or with a DMM) to ensure that components are properly aligned and soldered\nTesting and Validation\nTest the functionality of the board using appropriate test equipment and procedures\nPerform environmental testing (temperature, humidity, vibration, etc.) to ensure that the board is reliable in a range of conditions\nValidate that the board meets the required performance specifications\n4. PCB Stackups and Layer Considerations\nThe number of layers in a PCB is a critical consideration that affects the cost, performance, and manufacturability of the board. Here are some factors to consider when deciding on the number of layers for your PCB.\nThis is a typical PCB stackup that a fabrication house will send you. A stackup will typically include layer thickness, as well as the materials that will be used.\nPCB Stackups\nA PCB stackup is the arrangement of copper and insulating layers that make up the PCB. The stackup is critical for determining the electrical and mechanical properties of the board. Here are some common stackups:\n2-layer stackup: This is the simplest and least expensive stackup. It consists of a top layer and a bottom layer separate by an insulating layer. This stackup is suitable for simple circuits with few componets and signals.\n4-layer stackup: This stackup consists of two signal layers and two power/ground planes. It provides better signal integrity and EMI/RFI performance than a 2-layer stackup, and is suitable for more complex circuits with multiple signals and components.\n6-layer stackup: This stackup consists of four signal layers and two power/ground planes. It provides even better signal integrity and EMI/RFI performance than a 4-layer stackup, making it suitable for high-speed circuits and mixed-signal designs.\n8-layer stackup and above: These stackups are used for very high-speed circuits and designs with multiple power domains. They can provide even better signal integrity and EMI/RFI performance than a 6-layer stackup, but they are more expensive.\nLayer Considerations\nWhen deciding on the number of layers for your PCB, consider the following factors:\nComplexity of the circuit: More complex circuits require more layers to accommodate the additional components and signals.\nSignal integrity: High-speed signals require controlled impedance routing and multiple layers to reduce signal reflections and crosstalk.\nPower and ground planes: Multiple power and ground planes can provide better noise immunity and thermal management\nSize and cost: The number of layers in a PCB affects its size and cost. More layers increases the size and cost of the board.\nManufacturing constraints: PCB manufacturers may have limitations on the number of layers that they can provide, so it’s important to check with your manufacturer before deciding on the number of layers.\nDifferent Examples of 4 Layer Stackups\nTop layer: Signal; Layer 2: Ground plane; Layer 3: Power plane; Bottom layer: Signal This stackup is commonly used for designs that have multiple power domains and require good signal integrity.\nTop layer: Signal; Layer 2: Power plane; Layer 3: Ground plane; Bottom layer: Signal This stackup is commonly used for designs that have high current requirements and require good EMI shielding.\nTop layer: Signal; Layer 2: Ground plane; Layer 3: Signal; Bottom layer: Ground plane This stackup is commonly used for designs that require high-speed signal routing and good EMI shielding.\nTop layer: Signal; Layer 2: Ground plane; Layer 3: Signal; Bottom layer: Power plane This stackup is commonly used for designs that have mixed analog and digital signals and require good EMI shielding.\nTop layer: Signal; Layer 2: Power plane; Layer 3: Signal; Bottom layer: Ground plane This stackup is commonly used for designs that have mixed analog and digital signals and require good power distribution.\nIt’s important to note that the choice of stackup depends on the specific requirements of the design, such as the number of power domains, signal speeds, and EMI considerations.\n5. Ground Pours and Power Planes\nGround and power planes are critical components of PCB design, providing electrical and thermal stability to the board. Here are some guidelines for using ground pours and power/ground planes in your PCB design\nGround Pours\nA ground pour is a large copper area on the PCB that is connected to the ground net. Ground pours are used to reduce electromagnetic interference (EMI) and to provide a low impedance path to ground. Here are some considerations when using ground pours:\nConnect the ground pour to the ground pins of all components on the PCB\nKeep the ground pour away from high-speed signal traces to avoid interference\nUse multiple smaller ground pours instead of a single large pour to reduce the risk of a short circuit\n(If 2-layer) Place ground pours on both sides of the PCB to increase the effectiveness of EMI shielding\nPower Planes\nPower and ground planes are large copper areas on the PCB that are used to provide a low impedance path for power and ground. Power planes are used to distribute power to the components, while ground planes provide a low impedance return path for the current. Here are some considerations when using power and ground planes.\nUse power and ground planes to reduce electromagnetic interference (EMI) and to provide a low impedance path for current.\nPlace the power and ground planes adjacent to each other to reduce the inductance and resistance of the power distribution network.\nUse multiple power and ground planes for designs with multiple power domains or high current requirements.\nPlace vias to connect the power and ground planes on different layers of the PCB.\nConsider the thickness and conductivity of the power and ground planes to ensure they can handle the required current.\n6. Vias in PCB Design\nVias are small plated-through holes in a PCB that provide a connection between different layers of the board.\nVias are used to route signals, power, and ground between different layers of the board. Here are some considerations when using vias in your PCB design:\nUse smaller vias for high-density designs to save space on the board.\nConsider the aspect ratio of the via (the ratio of the hole diameter to the board thickness) to ensure manufacturability.\nPlace vias away from high-speed signals to avoid interference.\nUse blind and buried vias to save space on the board and to reduce signal reflections.\nAvoid placing vias too close to pads to prevent solder wicking during assembly.\n7. General Good Practice for PCB Routing\nWhen routing a PCB, there are several good practices to follow to ensure reliable and stable performance. Here are some guidelines to consider:\nTrace Width and Clearance\nThe width of a trace and the clearance between traces and components are critical factors in PCB design. The width of a trace determines the amount of current it can carry, while the clearance between traces and components determines the risk of a short circuit. Here are some considerations when setting trace width and clearance:\nUse wider traces for higher current requirements.\nUse narrower traces for signals with lower current requirements to save space on the board.\nConsider the thickness of the copper layers when setting the trace width.\nUse minimum clearance between traces and components to reduce the risk of a short circuit.\nIncrease the clearance between high-voltage traces and other components to reduce the risk of electrical arcing.\nSignals Routing\nSignal routing is critical for ensuring reliable and stable performance of the PCB. Here are some considerations when routing signals:\nFollow the datasheet recommendations for routing high-speed signals to reduce the risk of signal reflections and crosstalk.\nUse differential pairs for high-speed signals to reduce EMI and improve signal integrity.\nRoute signals away from high-voltage traces and components to reduce the risk of electrical arcing.\nPlace decoupling capacitors near the power pins of components to reduce noise and improve stability.\nBy following these good practices and guidelines for PCB routing, you can ensure that your design is reliable, manufacturable, and meets your performance requirements.\n8. Design Rule Check (DRC)\nA Design Rule Check (DRC) is an automated process that checks your PCB design for errors and inconsistencies. The DRC helps to ensure that your design meets the manufacturing requirements of your PCB manufacturer, and that your PCB will function as intended.\nThe DRC checks your design against a set of rules that you define. These rules can include parameters such as minimum trace width, minimum trace spacing, minimum drill size, and many others. The DRC will flag any errors or violations of these rules, allowing you to correct them before you send your design to the manufacturer.\nCreating a DRC in KiCAD is a straightforward process. Here are the steps to create a DRC:\nOpen your PCB design in KiCAD and click on \"Tools\" in the menu bar.\nSelect \"Design Rule Checker\" from the drop-down menu.\nIn the DRC window, you can define the rules for your design. For example, you can set minimum trace width, minimum trace spacing, and minimum drill size.\nOnce you have defined your rules, click \"Run DRC\" to check your design for errors and violations.\nThe DRC will flag any errors or violations of the rules you have defined. You can then make the necessary changes to your design to correct these errors.\nIt is important to run a DRC before sending your design to the manufacturer. This will help to ensure that your design meets the manufacturing requirements of your PCB manufacturer, and that your PCB will function as intended. Running a DRC can save you time and money in the long run, by catching errors early in the design process.\n9. Getting Your PCB Manufactured\nOnce you have completed your PCB design, the next step is to get it manufactured. There are many PCB manufacturers to choose from, including online PCB fabs such as JLCPCB, PCBWay, and OshPark. Here are some steps to follow to get your PCB manufactured:\nGenerate Gerber files: Gerber files are the industry standard file format for PCB manufacturing. They contain the information needed to produce the PCB, including the copper layers, solder mask, and drill files. Most PCB design software packages have built-in Gerber file generation tools.\nCheck your design: Before submitting your design to the manufacturer, it's important to double-check your design for errors or mistakes. Check that all the connections are correct, that there are no overlapping traces, and that the design follows the manufacturer's design rules.\nPlace an order: Most PCB manufacturers have an online portal for submitting orders. You will need to specify the number of PCBs you need, the type of board material, the board thickness, the number of layers, the copper weight, and other details.\nUpload your Gerber files: After placing your order, you will need to upload your Gerber files to the manufacturer's website. Be sure to include all the necessary files, including the drill files and any special instructions or notes.\nReview the design: Once you have submitted your files, the manufacturer will review your design to ensure that it can be manufactured. They may contact you if they have any questions or concerns.\nPayment and shipping: After your design has been reviewed and approved, you will need to pay for the order and provide a shipping address. The PCBs will typically be manufactured and shipped within a few days.\nIn addition to Gerber files, some manufacturers may also require other file formats such as Excellon drill files, pick-and-place files, and assembly drawings. Be sure to check with the manufacturer to confirm which files are required.\nBy following these steps, you can get your PCB manufactured and bring your project to life.\n10. Additional Resources\nHere are some additional resources that you may find helpful for creating a PCB in KiCad:\nKiCad Tutorial\nby Chris Gammell:\nhttps://www.youtube.com/watch?v=1AXwjZoyNno\nThese YouTube video tutorials provide a comprehensive guide to using KiCad for PCB design. By watching these videos and following along with the examples, you can learn the fundamentals of PCB design in KiCad and create your own custom PCBs.\nKICAD PCB Editor Explained:\nKiCad PCB Editor Interface and Layer Overview\nKiCad PCB editor is a powerful tool that provides a variety of features to help you design a professional-quality printed circuit board. Here are some of the key buttons and tools in the KiCad PCB editor interface:\nImportant Buttons to Know:\nPlace Component:\nThis button allows you to place components on the board. You can select a component from the library browser and place it on the board by clicking on the desired location.\nAdd Track:\nThis button allows you to add a new track to the board. You can specify the start and end points of the track, and KiCad will automatically route the track between them.\nAdd Via:\nThis button allows you to add a new via to the board. A via is used to connect a trace on one layer of the board to a trace on another layer.\nAdd Text:\nThis button allows you to add text to the board. You can specify the text content, font, size, and location.\nDesign Rule Check (DRC):\nThis button allows you to run a design rule check on your board. The DRC checks your board against a set of predefined rules to ensure that it meets certain design criteria.\nWhat Each Layer in the PCB Board Editor Means:\nTop Layer:\nThis is the layer of the board that is visible from the top. It typically contains the component footprints and the traces that connect them.\nBottom Layer:\nThis is the layer of the board that is visible from the bottom. It typically contains the ground and power planes, as well as additional traces.\nSilk Screen:\nThis layer is used to provide additional information about the board, such as component outlines, reference designators, and other text.\nTop Silk Screen:\nThis is the silk screen layer that is visible from the top of the board.\nBottom Silk Screen:\nThis is the silk screen layer that is visible from the bottom of the board.\nBoard Outline:\nThis layer defines the outline of the board. It is used to specify the shape and size of the board.\nSolder Mask:\nThe solder mask layer is used to define areas where solder mask material will be applied to the board. The solder mask is a protective layer that prevents solder from flowing where it is not supposed to during assembly. The solder mask layer is typically colored green, but other colors are possible.\nTop Paste:\nThe top paste layer is used to define the areas where solder paste will be applied to the board during assembly. The solder paste layer is typically used for surface mount components that are attached to the top layer of the board.\nBottom Paste:\nThe bottom paste layer is used to define the areas where solder paste will be applied to the board during assembly. The solder paste layer is typically used for surface mount components that are attached to the bottom layer of the board.\nDrill File:\nThe drill file is used to define the locations of the holes that will be drilled into the board during fabrication. This file provides the manufacturer with the precise dimensions and locations of each hole.\nBoard Outline:\nThe board outline layer is used to define the shape and size of the board. The board outline is typically a closed polygon that defines the outermost perimeter of the board.\nMechanical Layers:\nMechanical layers are used to add additional information about the board, such as mounting holes, cutouts, and other mechanical features. These layers are typically used to provide additional information to the manufacturer about how the board should be fabricated."
  },
  "Design ↔ Frontend ↔ Backend Impacts": {
    "author": "frank, erin, Brian Reicher",
    "branch": "Software",
    "hidden": "No",
    "parent page": "Breaking Silos (Breaking%20Silos%202d26a01f9689444bbb069f20491b80ac.md)",
    "content": "Changes other members of the team can make which impact\ndesigners\n:\nRequest design QA as needed and in advance\nChanges other members of the team can make which impact\nfrontend-focused developers\n:\nA component library is built into a Figma page since it makes it simpler to translate designs to implementation\nMockups are shared early and often so that engineering work can begin setting up while design work moves to polishing-focused stages\nEven when not included in the designs, it’s useful to have discussions of additional user interactions such as animation, hover states, etc. which can be added to components and implemented across the project to “bring it to life”\nEndpoints remain stable in both setup and contents, and mask implementation details, so that changes to the backend do not impact the frontend\nTypes (where possible) are shared across the codebase to remove complexity and need for duplication of work.\nChanges other members of the team can make which impact\nbackend-focused developers\n:\nImportant to have a shared understanding of how data is likely to expand in scope over time"
  },
  "Running Meetings": {
    "author": "Generate Management",
    "branch": "Software",
    "hidden": "No",
    "sub-page": "Running an All-team Meeting (Running%20an%20All-team%20Meeting%2074b77af1e34b42adb37db6c09ea10b17.md), Running an Engineering Meeting (Running%20an%20Engineering%20Meeting%202a5bafd290dd458f9c0efc721ff644c1.md), Running a Design Meeting (Running%20a%20Design%20Meeting%207e640f9cf1e34ddface8993f499265f1.md), Running a Leads (PL/TL/DL) Meeting (Running%20a%20Leads%20(PL%20TL%20DL)%20Meeting%201ee106d18ad34bd2800f864784dde7df.md), Suggested Meeting Cadence (Suggested%20Meeting%20Cadence%2051c79c8c761a4cd6964510c9566a00d5.md)"
  },
  "Spaces + Reservations": {
    "author": "frank, Jay Sella",
    "branch": "Operations",
    "hidden": "No",
    "tags": "FAQ, Leads/Chiefs Must-read",
    "content": "FAQs\nWhat can spaces be booked for?\nAfter 5pm, please avoid scheduling 1:1s in Sherm spaces. Feel free to use an available room if you see it though.\nSix (6) or more people?\nKeep meetings to 45 minutes or less.\nWho can book spaces?\nDirectors, Chiefs, and Project Leads (PLs).\nIf you are a general member, reach out to your lead to reserve a space if needed.\nWhen can spaces be booked?\nAnytime you want! Spaces are available for bookings 24/7.\nI should have access, but I don’t. Help?\nLog into\nGenerate’s FinOps Dashboard\nand confirm that you have completed all necessary onboarding steps and have been granted access. If you have questions or further issues, reach out in\n#ops-help\non Slack.\nAvailable Spaces\n007A: Corner Room\n[All Sherman Center]\nSeats 6-8 people\nMINIMUM\n: 6-person team\nAccess\n: Use the key in the Sherm Lobby, directly under the shelves by the printer.\nWrap the key around your backpack once you enter to ensure you don’t leave it in the room.\nAmenities\n: 2 couches, 2 chairs, TV, whiteboard wall\n008B: Sherm Conference Room\n[All Sherman Center]\nSeats 12+ people\nMINIMUM\n: 8-person team\nAccess:\nAll Sherman Center members have access through the Lobby.\nAmenities\n: conference table, 12 chairs, TV, videoconference equipment, whiteboard\n010A: Big Studio One\n[Generate only]\nSeats 10+ people\nMINIMUM\n: 8-person team\nAccess:\nGenerate students have keycard access.\nAmenities\n: table, 10 chairs, TV\n010B: Little Studio One\n[Generate only]\nSeats 5+ people\nAccess:\nGenerate students have keycard access\nAmenities\n: Table, 5 chairs, videoconference equipment, TV, whiteboard wall, beanbags\n010D: Makerspace Mini\n[All Sherman Center]\nSeats 5 people\nAccess\n: This space is only open to those with Makerspace access. See ‣.\nAmenities\n: table, 5 chairs, TV, whiteboard wall\nHow to Book Spaces\nOnly Directors, Chiefs, and Project Leads (PLs) can book spaces. Reach out to your team leader to reserve a space if needed.\nBooking Spaces via Outlook\nLaunch Outlook and navigate to the Calendar by selecting the\nCalendar\nicon\nClick on\nNew Event\nfrom the top menu. This will open a new event window.\nAdd Meeting Details:\nSpecify a\nTitle\nand the\nDate\nand\nTime\nfor your meeting\nAdd attendees if required by typing their name or email in the\nInvite\nfield.\nSelect a Room/Space:\nClick on the\nLocation\nor\nRooms\nbutton (depending on your version of Outlook). This will open a dialog box where you can search for available rooms or spaces\nThese are the rooms available to book:\nHA-010A-RR (Big Studio)\nHA-010B-RR (Little Studio)\nHA-010C-RR (Makerspace)\nHA-010D-RR (Makerspace Mini)\nHA-007A-RR (Corner Room)\nHA-008B-RR (Sherman Center Conference Room)\nIf there is a green checkmark  near the room, it\nis\navailable at that time! However if there is a red X then the room is already booked and unavailable during that time.\nSend the Meeting Request:\nOnce everything is set, click\nSave\nto finalize the booking\nThe room will receive the meeting request, and if it’s available, the booking will be confirmed automatically\nBooking Spaces via Robin\nFirst time booking a space through Robin?\nWatch\nthis video\n.\nLog into\nRobin\n, Northeastern’s room booking system. Click “Continue in with Single Sign-On” if you aren’t already logged in, and use your Northeastern credentials.\nFind Hayden Hall > 00-Basement\nIf no spaces on this Hayden Hall → 00-Basement are highlighted in green\n, you\ndo not have access\nto book rooms.\nSelect the Date and Time that you would like to make your booking for and click “Find a Space”\nYou can select different spaces based on:\nAmenities\n: TVs, whiteboard, number of chairs, etc. This is helpful if you need a room with a whiteboard, etc.\nCapacity\n: Any, 1-2, 3-5, 6-8, 9+. This is helpful for larger team sizes.\nPlease\nbe considerate\nof your fellow members by practicing\ngood stewardship\nof our shared spaces. If you need a room for a meeting with three people, and a four person room is available, please choose that room rather than one which can seat eight.\nFind the Room and Time that best suit your booking needs.\nIf you do not see a time that works for you, that means that the room is already reserved on that date and time. Try another location.\nEnter a Title for your booking. Examples: WaveWise Weekly Team Meeting; Engagement Leads Meeting\nNotes/Reminders\nInvite guests\n: this will send an email to all guests so they can easily add the meeting and location to their calendar.\nIf the meeting is a recurring meeting (once every week, once every other week, etc.), you must make it reoccurring with an end date.\nYou will get an email CONFIRMING the booking. If it is declined, that means the booking did not go through, likely because of a conflict with another booking\nTo see which rooms are available at which times:\nClick on “Schedule”\nClick on “Meeting rooms”\nBe sure to look under Hayden Hall → 00-Basement\nQuestions or Issues?\nReach out in\n#ops-help\non Slack. We’re here to help!"
  },
  "Orientation Slides F24": {
    "author": "frank",
    "branch": "All Generate",
    "hidden": "No",
    "content": "Orientation Slides F24.pdf"
  },
  "MCUs": {
    "author": "Aaliyah Yan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Electric Component Library (Electric%20Component%20Library%2014bf18dd5a94803eaa2eeed1de225989.md)",
    "content": "While popular, we would generally advise against using an Arduino Uno or ATMega for your project. They’re great for prototyping, but they’re not very powerful and multiple teams have had issues with the ATMega in the past.\n| MCU | Used On/Use Case | Capabilities | Links |\n| --- | --- | --- | --- |\n| ESP32-DEVKITC-32U | AutoPasser | |\nESP32-DEVKITC-32U | DigiKey Electronics\nESP32-DEVKITC-32U\n|\n| Raspberry Pi Pico | WaveWise v2 | Wi-Fi (with extension)\nBluetooth (with extension)\n26 GPIO pins\n133 MHz Clock\n2MB Flash Memory |\nSC0915 | DigiKey Electronics\nSC0915\n|\n| Jetson Nano | RoboUmp | Wi-Fi (with adapter)\nBluetooth (with adapter)\n21 GPIO pins\n1.43GHz Clock\n4GB Memory\nMicroSD Card Slot for Main Storage |\nNVIDIA Jetson Nano\n|\n| PIC16LF877A-I/PT | HiddenLock | 33 GPIO pins\n20MHz Clock\n14KB Flash Memory |\nMicrochip PIC16LF877A-I/PT\nPIC16LF877A-I/PT\n|\n| ESP32-WROOM-32UE-N16 | CStar\nMuscle Recovery | 33 GPIO pins\n20MHz Clock\n14KB Flash Memory |\nESP32-WROOM-32UE-N16 | DigiKey Electronics\nESP32-WROOM-32E (16MB)\n|\n| RP2040\n| FufuPot | 30 GPIO pins\n133 MHz Clock\n16MB Flash Memory |\nSC0914(13) | DigiKey Electronics\nSC0914(13)\n|\nAutoPasser\nWaveWise v2\nC Star\nMuscle Recovery\nFufuPot"
  },
  "KiCAD Installation and Setup": {
    "author": "Anna Birge",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Software Installation and Setup (Software%20Installation%20and%20Setup%2014bf18dd5a948054ae9df39c601a5c44.md)",
    "content": "Go to\nthe KiCAD website\nand click the blue “Download” button in the middle of the page\nSelect your operating system, then:\nFor macOS/Windows:\nUse the GitHub download link to download the version of KiCAD that Generate currently uses (as of Fall 2024, this is KiCAD v8)\nWhen the .exe file finishes downloading, run it\nMake sure to install the default component libraries during the installation\nFor Linux:\nFollow the steps https://www.kicad.org/download/linux/"
  },
  "Additional Resources": {
    "author": "Anna Birge",
    "branch": "Hardware",
    "hidden": "No",
    "sub-page": "EXP Makerspace (EXP%20Makerspace%202278ad093eb14b0b918ee73dd679fe72.md), Makerspace (Makerspace%20%F0%9F%94%97%209f2b606aef30438e86f553a9c9b18a97.md), Helpful Videos (Helpful%20Videos%2014af18dd5a948076b3fff18e3a5264a0.md), Project Management Tools (Project%20Management%20Tools%20efd70c8f1cc340b4959395ff43c5a658.md)"
  },
  "Generate for Course Credit": {
    "author": "frank",
    "branch": "All Generate",
    "hidden": "No",
    "content": "Depending on your role, you can take Generate as a class for course credit! Registration takes place during standard semester registration.\nFor members on client-facing Hardware teams...\nYou can register for a 4 credit, general engineering elective course: GE 4892 \"Engineering Product Design & Prototyping Challenge Project\".\n- To register: Register on Banner, like you would for any other course.\n- How it works: You'll have regular check-ins with Prof. Sivak and other students in the cohort and complete additional technical writing and analysis of your Generate project to convert the work you are doing for Generate into credit.\n- For more information: Email Professor Mark Sivak (m.sivak@northeastern.edu)\nFor members on client-facing Software teams in TL/SWE roles...\nIf you have not yet completed Software Engineering (CS 4530 / CS 5500) or Software Development (CS 4500) you can register for a 4 credit, capstone-fulfilling, writing intensive-fulfilling, and SWE/SWD-replacing course: CS 4535 \"Professional Practicum Capstone\"\nIf you have completed Software Engineering (CS 4530 / CS 5500) or Software Development (CS 4500), you can register for a 4 credit Khoury elective.\n- How it works: You'll have regular check-ins with Prof. Sivak and other students in the cohort and complete additional technical writing and analysis of your Generate project to convert the work you are doing for Generate into credit.\nThis is the first semester (Spring 2025) we have had this opportunity available, so we are unable to share further details at this time. If you email with your interest in registering, we will share more details once they are available."
  },
  "Running a Frontend ↔ Design Audit": {
    "author": "frank, erin",
    "branch": "Software",
    "hidden": "No",
    "parent page": "Breaking Silos (Breaking%20Silos%202d26a01f9689444bbb069f20491b80ac.md)",
    "content": "Before any Features are merged from Development → Production they should undergo a\nDesign Audit\n:\nEngineers complete the development of the Feature\nEngineers notify the designer and set up a time to Demo and review\nDesigner and Engineer walk through the completed feature together, alongside the Figma designs, and identify necessary improvements (as required):\n→ Necessary improvements are noted and added to the Squad’s backlog for the next week\n→ If an improvement is deemed too time-intensive, the proposed changes can be discussed with Leads, Chiefs, and other team members.\nThe designer approves the implementation and the feature is merged into Production (assuming it also meets code quality standards).\nThis is a perfect use of Squad meetups in team meetings, or team channels for members to show their work and receive feedback on it.\nNote: if doing this in a team meeting, having a paper trail is a great way to make sure all the feedback is adequately recorded"
  },
  "Leadership Workshop Slides & Recording": {
    "author": "frank",
    "branch": "All Generate",
    "hidden": "No",
    "content": "Zoom Recording\nVideo Conferencing, Web Conferencing, Webinars, Screen Sharing\nPowerPoint Slides\nhttps://docs.google.com/presentation/d/1wvAU0zncf2NgP5RdpP4ZKLYK7khWv4r7YX8Doi7vNiE/edit?usp=sharing"
  },
  "Motors": {
    "author": "Anna Birge",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Electric Component Library (Electric%20Component%20Library%2014bf18dd5a94803eaa2eeed1de225989.md)",
    "content": "DC/Gear Motors\nStepper Motors"
  },
  "Git Installation and Setup": {
    "author": "Aaliyah Yan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Software Installation and Setup (Software%20Installation%20and%20Setup%2014bf18dd5a948054ae9df39c601a5c44.md)",
    "content": "Create a GitHub account\nInstall Git\nMac:\nGit is already installed on MacOS devices\nWindows:\nDownload for Windows\nMake sure to also install Git Bash during the installation, everything else can be left as default\nLinux:\nYou probably already know what Git is/have it installed, but if not:\nUbuntu: In the terminal, run:\njsx\napt-get install git"
  },
  "Running an All-team Meeting": {
    "author": "frank",
    "branch": "Software",
    "hidden": "No",
    "parent page": "Running Meetings (Running%20Meetings%20a9e22541dedd4d0c8ebef43c89521ea6.md)",
    "content": "Example Agenda (30 mins)\nBonding activity (10 mins)\nPriority updates (5 mins)\nEach lead updates the whole team on immediate and upcoming priorities. PL shares important features, what features and deadlines are upcoming.\nFeature updates / assignment (5 mins)\nEach squad shares progress on their current feature, PL updates backlog to reflect progress\nSquads allocate themselves to new features (as makes sense)\nFeatures ≠ Enablers; Features are work to be done that contributes to the end product. Enablers are work that contributes to the team’s future ability to complete work.\nAlignment time for squads (10 mins)\nIn each squad, required alignment takes place to understand needs between design and engineering to deliver their assigned feature(s).\nSquads consult DL/TL for technical guidance, PL for business guidance."
  },
  "How to Represent Generate at Events": {
    "author": "Chirag Chadha",
    "branch": "Engagement",
    "hidden": "No",
    "sub-page": "Instructions for Tabling (Instructions%20for%20Tabling%208d8b2bb35b364c6cae27a6756487f6dd.md)",
    "content": "You may not represent Generate at public events without explicit approval from @Chirag Chadha (Engagement Director).\nIf are you interested in representing Generate at a public event or would like table please contact @Josephine or @Chirag Chadha on Slack.\nIf you have been asked to perform set up or take down for tabling events please see\nInstructions for Tabling\nIf asked to table for Generate at an event, please keep in mind the following guidelines:\nEmbody Generate's and Sherman Center's values\n: Reference the three values of the Sherman Center: developmental, inclusive, and intentional. Keep in mind the values that each member represents and how our priorities align with the organization and its members.\nKnow your audience and highlight Generate's impact\n: Tailor your pitch to students, potential clients, or partners as appropriate. Be prepared to share key statistics about our projects, members, and community. Emphasize the real-world experience members gain through Generate.\nShowcase diversity and inclusivity\n: Mention that Generate welcomes students from all 7 undergraduate colleges at Northeastern, with members from 50+ different majors. Discuss both Hardware and Software project varieties, as well as our Operations, Engagement, and Data Solutions opportunities.\nShare success stories with enthusiasm\n: If you're in HW or SW, have 1-2 client success stories ready, like Hot Date Kitchen, Alia, or Jurni. Let your passion for Generate shine through in your interactions.\nBe knowledgeable and humble\n: Be ready to discuss Generate's work, but know your limits. If you're unsure about something, offer to connect the person with the appropriate Generate leader.\nExample pitch:\nGenerate is a student-led product development studio at Northeastern University. We bring together passionate students from all majors to work on real-world projects for startups and industry clients. Our community of over 160 active members tackles both hardware and software challenges, providing innovative solutions while gaining invaluable professional experience.\nWe've completed over 100 projects for 95+ clients, ranging from mobile apps to physical prototypes. Our work has helped startups scale their operations and bring new products to market. For example, we developed a machine for Hot Date Kitchen that tripled their production capacity.\nGenerate offers students a unique opportunity to apply classroom knowledge to real projects, develop leadership skills, and build a strong professional network. We're always looking for driven, innovative students to join our community and contribute to exciting projects."
  },
  "Running a Design Meeting": {
    "author": "Erin Furey",
    "branch": "Software",
    "hidden": "No",
    "parent page": "Running Meetings (Running%20Meetings%20a9e22541dedd4d0c8ebef43c89521ea6.md)",
    "content": "Agenda (1 hour)\nBrand work (15 mins)\nAny required brand work is assigned, reviewed, discussed, and assigned\nFeatures ≠ Enablers; Features are work to be done that contributes to the end product. Enablers are work that contributes to the team’s future ability to complete work.\nCritique (45+ mins)\nEach designer shares the work they completed in the past week and others share area for improvement in addition to positive feedback\nNext steps\nAny decisions required to complete the next week’s work are made before designers leave."
  },
  "Parts Selection": {
    "author": "Aaliyah Yan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Development Resources (Development%20Resources%2014bf18dd5a9480dcb4cbfec87e0cb38b.md)",
    "content": "Price\nThe most obvious factor, make sure whatever you are buying is in your price range. Most components tend to be very cheap (a few cents per component to a few dollars), making it a good idea to buy them in bulk to reduce the amount of money sent on shipping costs. More specialized components, however, can be more expensive, ranging up to hundreds of dollars.\nSize\nYou need to make sure that whatever component you select will fit onto your circuit board. If you are buying components for a PCB, for example, make sure that the PCB is modeled around those components. As a general rule, the higher power the component is, the larger it will be.\nMounting Type\nComponents come with all different kinds of mounting structures, such as through-hole, surface-mount, etc. Most components you have used so far have likely been through-hole components (there are two metal rods emerging from either end of the component that can be plugged into a breadboard or soldered onto a PCB). However, if you're looking for a cleaner, more compact design, surface-mounted components could be beneficial to look into for PCBs.\nLead Time\nIf components are not in stock, there will be a timeframe on the page that says \"Lead Time\". This is the amount of time it will take to manufacture and ship out more of these components. Most components have a lead time of at least a couple of months, so if a component is out of stock and has a long lead time, it may be more beneficial to try and find another option.\nPower Rating\nThe power rating will dictate how much voltage and current can travel through your component. If you need your component to be able to handle 200V DC, make sure you look for that. If you need your component to be powered by a 12V DC battery, make sure you don't choose a component that has a lower maximum voltage rating. The power rating(s) of your component(s) will dictate both what components and what power sources you can use.\nTo find components, usually just searching the object you need should suffice (ie \"50V 10k resistor\"). Some good sites to buy components off of include\nMouser\n,\nDigi-Key\n,\nAdafruit\n, etc."
  },
  "Instructions for Tabling": {
    "author": "Chirag Chadha",
    "branch": "Engagement",
    "hidden": "No",
    "parent page": "How to Represent Generate at Events (How%20to%20Represent%20Generate%20at%20Events%200ba4a59732a6496586a3050c0c230f11.md)",
    "content": "Set Up\nIf you are the first person tabling at a club fair or similar event,\nyou are responsible for bringing the tabling materials below to the event\n— if you are this person, this information will be communicated you.\nBegin by picking up materials in Big Studio:\nItem List\n2x Poster Boards\n(behind the door)\n1x Retractable Banner + Stand (in black carrying case)\n1x Blue Generate Tablecloth ‼\n2x Black Bin\n(see images below)\ncontaining:\nPlease let us know if any of the items in this box are running low\nStickers\nBusiness Cards\nPens\nPost-its\nGenerate, Sherman Center, Forge, Venture Co-Op Handouts\nTake these materials to the designated tabling location. A table should be provided to you. If there is no table, please reach out to @Chirag Chadha on Slack.\nOnce you arrive at the table:\nPlace the\ntablecloth\nover our assigned table\nSet up the\nretractable banner\n(see\nvideo\nfor a visual explanation)\n:\nBe careful not to damage the base or the banner itself. It is\nVERY\ndelicate— if you take it out too quickly it may rip. Similarly, when putting the banner back into the base, ensure that it is properly aligned otherwise it won’t fit properly.\nPrepare the base\n: Place the base on a flat surface.\nAdjust the feet\n: Twist the feet so they are perpendicular to the base.\nExtend the pole\n: Take the pole out of its case and extend it to its full length.\nInsert the pole\n: Put the pole into the hole in the base.\nPull up the banner\n: Gently pull the banner up from the base using the top bar. Be careful not to smudge, rip, bend, or crease the banner itself.\nAttach the banner\n: Attach the banner to the top of the pole using the hook\nAdjust for stability\n: Make sure the banner is taut and stands straight.\nProp up the\nposter boards\nagainst something and place them on either ends of the table.\nThat’s it! Good luck tabling :)\nTake Down\nBegin by putting the\nretractable banner\nback into its base\n(see\nvideo\nfor visual explanation):\nPlace your foot on the base and secure it in place.\nPlace your hand at the top of the banner and unhook/unlatch it.\nSlowly bring down the banner back to the base. Mind the edges.\nDisassemble the pole.\nRotate the feet so they’re parallel with the base and can fit into the carrying case.\nPlace the base followed by the poles\n(on top)\nin the black carrying case.\nRemove any materials from the table and\nneatly fold the table cloth\n. Be sure to place it back into the bin it was originally in.\nConfirm you have all items:\nItem List\n2x Poster Boards\n1x Retractable Banner + Stand (in black carrying case)\n1x Black Bin with Tablecloth\n(see bottom right of image)\nReturn all items to\nBig Studio One (HA-010A)\nwhere they were\noriginally found\n(see picture below)"
  },
  "Makerspace 🔗": {
    "author": "frank",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Additional Resources (Additional%20Resources%20150f18dd5a9480b08e9debbd72440983.md)"
  },
  "Writing and Assigning Features (Stories) and Enablers (Tickets)": {
    "author": "frank",
    "branch": "Software",
    "hidden": "No",
    "parent page": "Breaking Silos (Breaking%20Silos%202d26a01f9689444bbb069f20491b80ac.md)",
    "content": "When writing Stories/Tickets, describe outcomes instead of prescribing methods.\nFor example, A) “Make a thing that does this, here’s some possible approaches if you’re really stuck on where to start” is markedly better than B) “Do x y then z”. A describes a desired outcome which the Squad can think critically about how to achieve. B describes an output which requires no complex thought to achieve and stifles autonomy and creativity, as such preventing your team from achieving their full potential.\nWhen it comes to allocating work, do not assign specific people specific tickets. Instead, let them pick tickets which they want to learn from/feel prepared to complete.\nIf nobody wants to pick up a Feature Story/Enabler Ticker, then it either needs to be broken down further, spiked (researched to be broken down), or nobody views it as important and thus you need to sell the importance better or realize it’s not valuable (and then cancel it and communicate its cancellation to your client)\nEmpower the talented people you hire and lean on them to make key decisions and guide your project."
  },
  "Git Guidelines": {
    "author": "Alex Nikanov",
    "branch": "Software",
    "hidden": "No",
    "parent page": "Dev Best Practice (Dev%20Best%20Practice%20365b0c30e6ac4885b80bf0a3e2f5749f.md)",
    "https": "//www.loom.com/share/ae3b496b3c8641f8a931e6e4414fac1d",
    "content": "What is Git?\nGit is a version control system. At a high level, one can think of it as a timeline management utility for your codebase. All of your code can be backed up in different versions, at different time points, so that any code modifications are safe and the codebase can be reverted to a specific point if a bug is introduced.\nNote that GitHub, GitLab, and Bitbucket are specific platforms that host code and are based on Git.\nHow do I install Git?\nhttps://www.loom.com/share/4e8ed6bef63a44c4b3710f28605cf515\nhttps://git-scm.com/book/en/v2/Getting-Started-Installing-Git\nApart from installing Git in the system, you would need to clone the specific repository you will be working on to your system. This repository will be a part of the GenerateNU organization on GitHub.\nbash\ngit init\ngit clone #git@HOSTNAME:USERNAME/REPONAME.git\nYou can read how to initiate and clone a repository in details through this link:\nhttps://www.atlassian.com/git/tutorials/setting-up-a-repository\n.\nAdditionally, you could install Git as an extension for your respective IDE (a lot of them also include it out-of-the-box), making the process considerably easier.\nOverall Git Workflow\nhttps://www.loom.com/share/3585716bb8d04fd193826b92bd78076b\nIn Generate, we normally use the\ngit feature branch\nworkflow, which you can read more about below or with the following link:\nhttps://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow\n.\nWe also have this helpful graphic that summarized the workflow:\nBranches\ngit checkout\nOne of the most important Git concept you need to be comfortable with is\nbranches.\nA branch is a version of a codebase, that started at a specific timepoint from the\noriginal branch\n, and then the code that follows in that version may\nbranch off\nfrom the code in the original version.\nThe cool thing about Git is that you can have all those version stored at the same time — you just need to switch between them to see those versions with the following command:\nbash\ngit checkout\nThere are three main branch types that you will need to understand:\nmain\n,\ndev\n, and\nfeature-x\nbranches.\nFor a detailed tutorial on Git branching, check out this page:\nhttps://www.atlassian.com/git/tutorials/using-branches\n.\nMain branch\nThe\nmain\nbranch stores the latest release of the codebase. That means that the code stored will likely be used in production or relayed to the client. The code that is stored here\nmust\ncompile and correspond to the design/coding standards set by the team.\n`main` branch will be protected: that means that you will not be able to push to the branch directly, and the only way that the code in this branch will be updates is through the PRs from the `dev` branch (read on for details). This ensures the safety of the code in the branch.\nDev branch\nThe\ndev\nbranch is used for development (often called a “staging” branch) — it will contain the latest finished work done by the team, including some of the changes/features that are not yet ready to be released and published in the\nmain\nbranch.\nWhen working on a specific ticket, you should not be working in the `dev` branch directly — make sure to pull the code from `dev`, and branch off to a feature-specific version of code.\nFeature branches\nNote that I said “branch\nes\n”: there may be multiple features branches active at the same time. Throughout the semester, you will be assigned (in small teams) tickets that ask you to implement a certain feature or fix a certain bug. To do so, you will branch off\ndev\nbranch and create a new branch that you will be working on. When you are done with your feature/bug, you will open a\npull request\nfrom your feature branch to the\ndev\nbranch, so your feature can be merged back into\ndev\n.\nWe use the following naming convention for the branch names:\n/-\n.\nThe\ngroup\nis either:\nfeature\n, if you are implementing a feature\nbug\n, if you are fixing a bug\nThe\nticket number\nis\noptional\n, and you may have one in the ticket tracking system your PL will use.\nFinally, the\ndescription\nis a few\nlowercase\nwords separated by\nhyphens\n(-), that briefly describe the feature or a bug you are implementing.\nSome examples:\nfeature/10-sign-in-screen\n(with the ticket number)\nfeature/sign-out-screen\n(without the ticket number)\nbug/15-aws-integration\n(fixing the AWS integration, refer to ticket 15)\nAvoid undescriptive or long branch names such as `bug/screen` or `feature/23-adding-the-sign-in-screen-with-better-design-to-the-home-page`.\nCommits\ngit commit -m\ngit commit\nis one of the primary functions in Git, allowing you to record changes made since the last backup point, and submit all those changes under a common message explaining the changes made.\nHow often should I commit?\nProduct development is all about\nsmall, incremental changes.\nWhen you commit, a good rule of thumb is a single implemented feature/fixed bug/changes in dependencies, etc. Basically, your commit should be dedicated to one thing, and one thing only.\nThat said, however, committing a change in a single line of comments is probably unnecessary, as that clutters the timeline. Adding a feature that involved a LOT of changes in a single commit is not a good idea either — if such a situation happens, try to break the feature down in smaller parts and work on them incrementally.\nBefore committing, make sure that your code compiles and works!\nWriting a good commit message\nThere are many standards used in writing commit messages, and at Generate, we use conventional commits. You can read the specifications over here:\nhttps://www.conventionalcommits.org/en/v1.0.0-beta.2/\n. Also, there are many extensions for your favorite IDEs that automate these commit messages:\nVSCode:\nhttps://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits\nIntelliJ:\nhttps://plugins.jetbrains.com/plugin/13389-conventional-commit\nPushes\ngit push\nA\ngit push\ncommand submits and stores the version of code stored on your local machine to the\nremote\n(i.e., the server that hosts the code repository).\nRemember to never directly `git push` into `main` and to always push your work at the end of the day, so that you don’t lose the work you’ve done to an accident.\nRead more about pushing here:\nhttps://www.atlassian.com/git/tutorials/syncing/git-push\n.\nPull Requests & Code Reviews\nOnce you have pushed a change, or collection of changes, the last step is to get review from your team. This is the most important stage of the software lifecycle, and it is also the hardest to define rules for. In this section, we will lay out some general guidelines for creating, reviewing, and merging Pull Requests.\nCode reviews are one of the most important parts of the software development lifecycle. They give team members the chance to read your code, leave comments of varying degrees, request changes, and ultimately approve the change with a . In many professional settings, especially those that could have financial implications for the company, a teammate’s approval is legally required before deploying code to production!\nDue to the nature of code reviews, the makeup of a team may dictate tweaks on code review “best” practices. This section outlines one way to review code, but defer to your tech or project lead for final say.\nWhat is the purpose of a PR?\nA PR is a request to merge some feature code into the\nmain\nbranch, which effectively releases a new version of the code base. PRs are helpful for a variety of reasons:\nKeep the team on the same page with changes to their codebase, regardless of who the code author is\nMake it easy to review a new\nfeature\nFoster conversation around code changes for everyone to weigh in on and learn from\nAllow for asynchronous iterations on proposed code changes\nWhen should I open a PR?\nAs soon as you\npush\nchanges to a new branch, you should open a PR. There are two stages of PRs, and it’s important to respect them so that your team knows when it’s time to look at proposed code.\nCode doesn’t have to be perfect to be reviewed - get review early and often! If you spend hours perfecting your feature before getting any review, then PR review exposes a core aspect of the feature needing to change, all that polish-time is wasted.\nDraft:\nPR. Once you\npush\nnew code, you should open a draft PR. This lets your team know that “\nHey, I’m working on this new feature locally, but it’s not ready for review yet.\n” At this point, anyone can see the PR, but it will not have any requested reviewers.\nReady for Review\nPR. Once the feature is complete, and all the\nTODO\nitems in the associated ticket are implemented, it is time to request review from teammates. Removing the\nDraft:\nprefix from the PR name, and selecting relevant team members from the\nReviewers\ntab on the PR lets them know that the author thinks the code is ready to go to production, and would like feedback.\nHow to write a good PR description?\nWhen creating a pull request, there are a few things to keep in mind:\nWhat stage is it in?\nIf the PR is still in progress, prefix the PR title with\nDraft:\nor\nWIP:\n(Work In Progress). Also, create the PR as a “\nDraft Pull Request\n”.\nWhat background info should the reviewer know?\nMaybe you have a diagram of the workflow that this PR implements, or a design of the database table that this PR introduces. Maybe to fully understand, and eventually\nApprove\n, your change, the reviewer should be familiar with an earlier change. Any resources or information that the author should know about before reading your code changes should be included in the description.\nWhat problem does the code change solve?\nDepending on your team, you may have a Trello card, a GitHub issue, a Jira ticket, etc. to link to which contains more information on what this change is intended to do. This is helpful to keep the PR description short, but should not be the entire description.\nHow was this change tested?\nEvery change should be tested to some extent before asking someone else to look at it. If you tested the change locally, explain how. Maybe your PR includes a bunch of unit tests for new functionality. Maybe your project contains acceptance tests, and you included that. The possibilities are endless, but by including your testing strategy for the reviewer, they won’t need to worry as much about reviewing the code for bugs, and can focus on style, structure, and overall efficiency.\nWho should I request review from?\nDefer to instructions from your project lead and technical lead here, but typically when you open a pull request you should request review form 2 people: your technical lead, and whoever has worked most closely with this code. If you worked alone, or with one person on it, and it’s a new chunk of code, maybe request review from whoever was involved in the data design. Or request review from someone who is working on the same feature in a different part of the stack, or the person who will be picking up the next related feature.\nIf you want other eyes on the code, or it’s a particularly interesting feature PR, feel free to request review from the software director & chief architect using the\nCode Walk Request\nform!\nHow to review code?\nWhen submitting a PR review, you will see there are options to\nComment\n,\nApprove\n, and\nRequest Changes\n. The goal of opening a PR is to get\nApproval\nfrom your team. The goal of reviewing a PR is to read the code, and sniff out any aspects of the code that may not be ready for the production environment. I like to group my comments in a review into three categories, ordered by severity.\nNit\n: Comments\nNit level comments are nit picks - they are comments that don’t necessarily change the functionality of a piece of code, but they may make a suggestion to make it easier to read, slightly more efficient, or more aligned with the project’s style standards. Typically, it’s up to the PR author on whether or not they want to resolve these comments, or ignore them.\nExample Nit Comments:\nMaybe you find a method name to be misleading, so you’ll leave a\nNit:\nexplaining what you expected the method to do vs. what the method actually does. Maybe your project typically names it database tables as singular nouns (like\nitem\n), and this PR introduces a table with a plural name (like\nitem_prices\n), so you leave a comment like\nNit: To stay in line with the rest of this project's tables, can we rename\nitem_prices\nto\nitem_price\n?\nConversational Comments\nI don’t prefix these, but these are comments that should definitely be addressed with conversation on the PR. Sometimes they’re genuine questions, sometimes they’re inquiries about design decisions, sometimes they are comments that don’t block the PR, but are more significant than a\nNit\n.\nExample Conversational Comments\n: Maybe a new PR introduces an\nitem_price\ntable like in the previous example, but there are a lot of duplicate columns between this new table and the\nitem\ntable. Depending on the size of your data and the usages of this table, it’s unclear to you why the columns are duplicated, so you may leave a comment like\nWhy does\nitem_price\nduplicate both the\nname\nand\nid\ncolumns from the pre-existing\nitem\ntable? Should these ever be different from their corresponding columns in the\nitem\ntable?\nAlternatively, maybe you noticed the author re-wrote a helper function that effectively exists somewhere else in the codebase. You may leave a comment pointing them to that function, and ask if they could try to use that one to keep the codebase cleaner.\nBlocking:\nComments\nThese comments should block the PR from being merged, which can be done using the\nRequest Changes\nbutton when submitting your review. The are comments about changes that you\nknow\nare going to break some code, or do not follow the designs that this feature is supposed to implement.\nExample Blocking Comments\n. Extending the previous example, maybe one of the goals with the\nitem_price\ntable is to be able to handle prices in any currency, but the\nitem_price\ntable does not have a column for\ncurrency\n. You may leave a comment like\nBlocking: According to the designs, we want to track prices of any currency. Should the\nitem_price\ntable have a\ncurrency\ncolumn, or should there be a\nTODO:\ncomment in the code to add this support later on?\nAdditionally, maybe you notice a boolean logic error in a function named\nisItemOverPrice(int price)\nthat returns\nthis.price < price\ninstead of\nthis.price > price\n. This would be a blocking change, because it will return the opposite of what you expect, and could lead to some nasty bugs. Additionally, maybe you also suggest the author write a unit test for a certain function that has particularly complicated logic, such that future contributors will not accidentally edit the complicated function and break the code.\nIf you open up a pull request, and want eyes on it from some more experience engineers within Generate, request review from the chief architect and/or software director using the Code Walk Registration Form! Try to do this at least once this semester!"
  },
  "Electric Component Library": {
    "author": "Anna Birge",
    "branch": "Hardware",
    "hidden": "No",
    "sub-page": "LEDs (LEDs%2014af18dd5a948091a736de4c31471c8d.md), Motors (Motors%2014af18dd5a9480e6a3e4d9c951f8cbb7.md), Power Supplies (Power%20Supplies%20150f18dd5a9480fe825bc7719d9cd547.md), MCUs (MCUs%20150f18dd5a9480e4ad1cfc587977bea9.md), Voltage Regulation (Voltage%20Regulation%20150f18dd5a94801aa0fff8bc344f9063.md)",
    "content": "This folder is a library for all electronic components that have been used by Generate Hardware ECE teams in the past. It is intended to be the first step in component selection, so teams can confidently choose parts that have been used and proven to work in the past.\nNote that this is not a comprehensive guide of all hardware available to you. It is simply a collection of items that have been used in the past by previous Generate groups.\nThis includes parts from the following projects:\nAutoPasser (v1 & v2)\nHiddenLock\nHot Date Kitchen (v1 & v2)\nTatumRobotics\nFufu Pot (v1 & v2)\nWaveWise (v1 & v2)\nRoboUmp\nCStar\nMuscle Recovery\nPCB Components:\nLEDs\nMCUs\nVoltage Regulation"
  },
  "Software Installation and Setup": {
    "author": "Anna Birge",
    "branch": "Hardware",
    "hidden": "No",
    "sub-page": "KiCAD Installation and Setup (KiCAD%20Installation%20and%20Setup%2014af18dd5a9480b3bd5af70ae4b843df.md), Git Installation and Setup (Git%20Installation%20and%20Setup%20150f18dd5a948042b379f86130343664.md), Downloading SamacSys Library Loader (Downloading%20SamacSys%20Library%20Loader%20150f18dd5a948099a84fc9692789a592.md)"
  },
  "Passive Networking": {
    "author": "Jacob",
    "branch": "All Generate",
    "hidden": "No",
    "content": "Statement\nGenerate is actively looking to expand and diversify the applicant pool for future semesters. One audience we have not tapped into enough is our physical network. Together, let us take initiative to promote Generate verbally.\nWhat does passively networking look like?\nIf you find yourself in a conversation with someone looking for club recommendations, driven & growth-oriented circles, or a community of builders, let them know that we exist! Talk about…\nWho we are\n: the student-led product development studio on campus that takes clients, entrepreneurs from Northeastern’s extended network and the Boston area, and builds their product for them\nOpportunities\n: Engagement, Hardware, Operations, Software—a place for all majors\nValues\n: driven, empathetic, growth-oriented, innovative, spirited\nDo not worry if you cannot remember all of that! Any non-empty subset of those details is sufficient.\nAlso, if you find yourself with someone who seems like a great fit for Generate, tell them to apply!\nDo NOT force someone to listen to you pitch Generate. The indicators for when it would be a great time are provided above."
  },
  "Voltage Regulation": {
    "author": "Aaliyah Yan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Electric Component Library (Electric%20Component%20Library%2014bf18dd5a94803eaa2eeed1de225989.md)",
    "content": "Buck Converters\n| Part | Used On/Use Case | Voltage Regulation | Link(s) |\n| --- | --- | --- | --- |\n| PLMR38020FDDAR | Fufu Pot | 12V - 5V\n48V - 12V/16V\n4.2V - 80V Voltage Range\n2A Output Current |\nTexas Instruments LMR38020SDDAR\n|\n| LM2576HVS-5.0_NOPB | WaveWise | 1.23V - 37V Input\nUp to 57V for HV Version\nFixed 5V Output\n3.3-V, 5-V, 12-V, 15-V Versions Available\n3A Output Current |\nLM2576HVS-5.0/NOPB\nLM2576HVS-5.0/NOPB | DigiKey Electronics\n|\nFufu Pot\nWaveWise\nLow-Dropout Regulators (LDOs)\n| Part | Used On / Use Case | Voltage Regulation | Link(s) |\n| --- | --- | --- | --- |\n| TPS785-Q1 | Fufu Pot | 1.7V - 6.0V Input\n1.2V - 5.5V Output\n1A Output Current | https://www.mouser.com/new/texas-instruments/ti-tps785-q1-ldo-regulators/\nTPS785-Q1\n|\n| AP1117E15L-13 | Muscle Recovery | -0.3V - 18V Input\n1.5V, 1.8V, 2.5V, 3.3V, 5.0V Output\n5mA-10mA Output Current |\nAP1117E15L-13 | DigiKey Electronics\nADP3339AKCZ-3.3-RL\n|\n| MAX604CSA | HiddenLock | 2.7V - 11.5V Input\n3.3V, 5V, Adjustable Output\n500mA Output Current |\nAnalog Devices Inc. MAX604CSA+\nMAX604CSA\n|\nFufu Pot\nLevel Shifters\n| Part | Used On/Use Case | Voltage Regulation | Links |\n| --- | --- | --- | --- |\n| TXB0108PWR | AutoPasser\nWaveWise | 1.2V-3.6V to 1.65V-5.5V (Bidirectional)\n50mA Input/Output Current |\nTXB0108PWR\nTXB0108PWR | DigiKey Electronics\n|\nAutoPasser\nWaveWise"
  },
  "Basic KiCAD Use": {
    "author": "Aaliyah Yan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Development Resources (Development%20Resources%2014bf18dd5a9480dcb4cbfec87e0cb38b.md)",
    "content": "Intro to KiCad.pdf\nThe above workshop details some KiCAD basics such as:\nWhat KiCAD is\nImportant file types within KiCAD (and other eCAD applications)\nHow to create a KiCAD project\nSome basic schematic stuff in KiCAD\nNote that the method of downloading component files for use is outdated in the above slideshow\nInstead, you can often find models in the Digikey page for a component, which most of the time do not require an account to download\nComponents on Mouser require an account to download\nAccounts are also required for direct downloads from SnapEDA and Ultra Librarian\nMake sure to keep all KiCAD files for your project in the /production/ecad directory of the git repository"
  },
  "Dev Best Practice": {
    "author": "Generate Management",
    "branch": "Software",
    "hidden": "No",
    "sub-page": "Git Guidelines (Git%20Guidelines%2009c801d172434d59b9bd0b62c746d5fb.md), In-house Calendar Package (In-house%20Calendar%20Package%20434356962cbe43d5be356e820d78430e.md)"
  },
  "Helpful Videos": {
    "author": "Anna Birge",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Additional Resources (Additional%20Resources%20150f18dd5a9480b08e9debbd72440983.md)",
    "content": "KiCAD Tutorials (Phils Lab)\nhttps://www.youtube.com/watch?v=nkHFoxe0mrU&pp=ygUPcGhpbHMgbGFiIGtpY2Fk\nhttps://www.youtube.com/watch?v=PlXd3lLZ4vc&pp=ygUPcGhpbHMgbGFiIGtpY2Fk\nDecoupling Caps\nhttps://www.youtube.com/watch?v=BcJ6UdDx1vg"
  },
  "Digital Stewardship": {
    "author": "Jay Sella",
    "branch": "Operations",
    "hidden": "No",
    "tags": "Leads/Chiefs Must-read",
    "content": "As a leader in Generate, you play a vital role in maintaining the integrity and effectiveness of our digital presence, tools, and financial stability. All Generate-related accounts, from Amazon to TikTok to GitHub, are managed by Operations.\nExisting Accounts\nGenerate holds a number of accounts that we’ve accumulated over the years. These should be used whenever possible.\nCreating New Accounts\nBe Timely\nIf you know you will need an account, request it as soon as possible. Don’t wait until you’re ready to begin work with it; this may block your team and slow down progress.\nAvoid Duplication\nBefore creating any new account, ask yourself:\nIs there an existing account or service that can fulfill this need?\nCan we expand the use of a current service instead of creating a new one?\nIf creating a new account is absolutely necessary, be sure to follow the principles described below.\nDigital Stewardship Principles\nEmail Accounts\nOur official email address, generate@northeastern.edu, must be attached as the primary email to all Generate-related accounts.\nDo not create new emails such as project- or team-specific Gmail accounts. If access to a service is needed, request credentials from your Director or reach out to the Operations Chief Information Architect (CIA). Be prepared with your justification.\nDocumentation and Security\nProvide Operations CIA with all necessary info to create account by sending a message in\n#ops-help\n. They will create the account, save credentials in Proton Pass, and share a Proton Pass link with you, if necessary.\nGenerate random, strong passwords from within Proton Pass, using at least 20 characters when able.\nDo not share account credentials\nunless necessary for another member to perform their role.\nPhone Numbers and MFA\nConfigure token-based 2FA via Proton Pass whenever possible.\nSave any security questions with answers and recovery/backup codes in Proton Pass.\nDo not use personal phone numbers for 2FA or other account-related details.\nIf a number is necessary to have on file, use Frank’s. DM your lead if you don’t have his number.\nSubscriptions\nIf a new service will require a paid subscription, or if you need to sign up for a new or modified paid subscription on an existing account:\nSecure approval from your branch Director.\nSubmit a Procurement Request for the service.\nInform the Operations CFO directly on Slack of the frequency and cost.\nNortheastern University is a\ntax-exempt\ninstitution. Generate can not pay for, and members may not be reimbursed for, sales tax on purchases. Most official accounts already have our tax-exempt status on file with the vendor.\nQuestions\nIf you have any questions, please reach out to your Lead, branch Director, or in\n#ops-help\non Slack.\nDecember 11, 2024 to update"
  },
  "Schematic Best Practices": {
    "author": "Aaliyah Yan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Development Resources (Development%20Resources%2014bf18dd5a9480dcb4cbfec87e0cb38b.md)",
    "content": "“Electricity is really just organized lightning” - George “Andrew Abrego” Carlin\nPreface\nThis document will show you how to set up your KiCAD schematic pages to look as professional as possible, as well as give you some good design practices when implementing circuitry.\nKeeping Your Schematic Organized\nSelecting the Correct Page Size\nTypically when you begin a schematic, KiCAD will open a page that resembles the following:\nKiCAD schematics generate with a\nSize A\npage by default, which most of the time will be too small to fit a significant amount of circuitry on.\nWe can change this by zooming in on the box in the bottom right of the schematic page and selecting the box related to page size.\nClicking this box will open a menu where you will be able to alter the page size of the schematic. Industry-standard schematics are\nSize B\n, although in certain situations will go up to\nSize C or D\n.\nMake sure to also fill out the Issue Date, Revision, and Title fields\nSchematic Organization\nOrganize your schematic by functionality\nOrganization of power architecture in a KiCAD schematic\nOne of the main goals when creating a schematic is to allow other engineers to easily read and understand the work that you’ve done, and interpret (from a circuitry standpoint) the purpose of each part of the circuit. One of the ways that we can do this is by\ngrouping components by functionality\n.\nGrouping components by functionality\nmeans organizing your schematic in such a way that all IC’s and passive components (Resistors, Capacitors, etc) are grouped together. Popular grouping includes the following:\nPower architecture: How your project is powered:\n- This page should include callouts as to how much power is being used and the current draw on each of the power supplies\nAs we can see from the image above, the voltage levels that the IC’s are regulating are called out explicitly in blue (1.2V and 3.3V switching supplies)\nShown below is another good example of useful notes to include when listing out power architecture\nThis image shows both USB-C power transfer circuitry as well as architecture to regulate voltage. Pay attention to how the notes in blue and red\ncall out exactly what the circuit does and what voltage level it is operating at or regulating.\nControl architecture:\n- Another common way of organizing a schematic is having differente sections dedicated to different methods of control.\n- Examples of this include having anything that is on a shared I2C line or anything that exists as its own architecture (such as a microcontroller and associated passive components) in their own sections\nAs we can see from this image, the power supply LDO IC, MCU, and header pins are all placed close to one another and have their nets labeled. This helps us to identify which pins go where.\nReference Designators\nAnother important thing to consider when designing a schematic is having clean and consistent labeling for the various components and ICs. This includes:\nUsing proper reference designators for all components. Here are some of the most common reference designators that you might encounter in Generate, along with other information that should be visible:\nR:\nResistor (resistance value)\nC:\nCapacitor (capacitance value and voltage rating)\nL:\nInductor/ferrite bead (inductance value and voltage rating)\nU/IC:\nIntegrated Circuit (IC), U is more common, but IC is still acceptable (part number and manufacturer)\nQ:\nTransistor (part number)\nJ:\nTerminal/connector (part number)\nB:\nBattery (part number and voltage rating)\nD:\nDiode (part number)\nS:\nSwitch (part number)\nTP:\nTest point\nMaking sure that reference designators are in visible locations, and are not covered by other text or symbols\nGround and power lines should be indicated with power flags\nGround flags should always point down\nPower flags should always point up\nOther Important Considerations\nThe following tips are important considerations to take into account when designing schematics, but are not large enough to warrant their own sections (but are however, still crucial to follow when designing a schematic)\nEnsure that every net has a meaningful name. Also, keep net names reasonably short and only use uppercase letters\nA net is the connection between the pins of two or more devices\nWhen doing layout, the software will use the nets from the schematic to determine which pins on which devices will be allowed to connect to each other\nIf pins that are supposed to be connected are labeled with different net names, the layout software will not allow you to connect the pins together (technically you can manually override this, but it’ll still throw an error when checking the layout\nThis image shows a schematic where every net is named, meaning that connections will be made between the pins with the same nets\nArrange pins according to function: It’s ok for the schematic symbol for a component not to match exactly with the footprint of the part if it means that the schematic will be neater or easier to understand\nDirect connections should be used when reasonable (ie when drawing lines directly from pin-to-pin won’t result in the schematic being harder to understand). Otherwise, use net names to keep the schematic neat and easy to understand.\nIf you are using any chips that utilize I2C for communication with a main microcontroller, be sure to call out the specific I2C address that the device uses\nExample Schematics"
  },
  "Breaking Silos": {
    "author": "Generate Management",
    "branch": "Software",
    "hidden": "No",
    "sub-page": "Team Structure for Collaboration (Team%20Structure%20for%20Collaboration%204f7be20b762141c582917dee2fc734e2.md), Running a Frontend ↔ Design Audit (Running%20a%20Frontend%20%E2%86%94%20Design%20Audit%209901f9af66b14509ba27170ecb194b01.md), Design ↔ Frontend ↔ Backend Impacts (Design%20%E2%86%94%20Frontend%20%E2%86%94%20Backend%20Impacts%2010729e4dbd0e40afbccbead40a0237c0.md), Writing and Assigning Features (Stories) and Enablers (Tickets) (Writing%20and%20Assigning%20Features%20(Stories)%20and%20Enabl%204f2ab474b12d4f2cb1ab772062d845b9.md), Figma → Dev Handoff: Best Practices (Figma%20%E2%86%92%20Dev%20Handoff%20Best%20Practices%20a5df8b52ab98443e81d1d60385660dde.md)"
  },
  "Running a Leads (PL/TL/DL) Meeting": {
    "author": "frank",
    "branch": "Software",
    "hidden": "No",
    "parent page": "Running Meetings (Running%20Meetings%20a9e22541dedd4d0c8ebef43c89521ea6.md)",
    "content": "Agenda (15 mins)\nPL updates DL and TLs on client developments and feedback from client based on work showcased (5 mins)\nDL updates TLs and PL on design progress and clarifies any needs from PL and TLs (5 mins)\nTLs update DL and PL on implementation progress and clarify any needs from PL and DL (5 mins)"
  },
  "Sherm Access Not Working": {
    "author": "frank, Jay Sella",
    "branch": "Operations",
    "hidden": "No",
    "tags": "FAQ",
    "content": "If you notice a keycard reader isn’t working,\nplease let someone know\nso we can diagnose the issue and quickly resolve it. A few things to try to help escalate …\nUnderstand if it’s an issue with\nyour\naccess\n, or with\neveryone’s\naccess\n:\nIf it’s an issue with your access, please log into the\nGenerate Ops Dashboard\nto check if you have been added to the access list for the spaces. This issue is common at the start of a semester.\nIf the Dashboard says you have access, but you are experiencing an issue that no one else is, please send a message in\n#ops-help\non Slack. Be sure to mention the space you are trying to access and what behavior you are seeing.\nIf others also have the issue, and the keycard reader is\nnot flashing red or green or making a beep when reading a card\n, it’s likely the reader is\nout of battery\n.\nIn this case:\nPlease send a message in\n#ops-help\non Slack\nAdditionally, please\nsubmit a work request\nhere\n:\nProblem Type:\nLocks, Keys and Card Access\nCampus:\nBoston\nBuilding name:\nHayden\nFloor:\n0 | Basement\nRoom number:\n008 | Private Circulation Area\nLocation within room:\nFront door\nDescription:\nDoor keycard reader requires AD400 battery change.\nThank you for helping us maintain access to the space!"
  },
  "Figma → Dev Handoff: Best Practices": {
    "author": "Generate Management",
    "branch": "Software",
    "hidden": "No",
    "parent page": "Breaking Silos (Breaking%20Silos%202d26a01f9689444bbb069f20491b80ac.md)",
    "content": "Whether you are a PL looking to scope out Figma dev for your team or a software developer looking for resources, this is the place to be!\nTLDR;\nReally great info about Figma developer handoff:\nhttps://www.figma.com/best-practices/guide-to-developer-handoff/\nFeel free to browse this example file to see Figma's \"can view\" capabilities:\nhttps://www.figma.com/file/ewVdWlAd3ZZ3lZSWBaTWZn/Generate:-Dev-Handoff-Example?node-id=0%3A1\nStep-by-step Guide:\nSteps for Design Handoff:\nMake sure the front-end devs on your team have Figma access. If they do not, collect their emails and either:\nGive them \"can view\" access on Figma\nSend the emails to the Chief Designer who will deal with permissions\nOnce the lofis for a feature are complete, move those screens (and any accompanying prototyping) to a new page titled: \" Feature Name: lofis\"\nShowNxt example: \" Coach Signup: lofis\"\nThis consistent naming convention is important\nso your devs know where to look for designs!\nUse the\nAuto Flow Plug-in\nto draw connections between screens so your devs will understand the flows better\nLet your team know what lofis are ready to dev!\nSteps for Front-End Development:\nOnce designers let you know a feature is ready for development, open the Figma file (either within the desktop app or in a browser)\nIf the design is ready for development, the designs will be found on the page named: \" Feature Name: lofis\" or \" Feature Name: hifis\"\nThe means the designers are done making adjustments to these screens\nNavigate to the page you will be developing (using the left side panel)\nBEST PART:\nSelect the frame (\nA.K.A. art board\n) you are working on, and using the\ncode panel\n(on the right-side of the screen) you have the opportunity to view code for CSS, iOS (Swift), and Android (XML) and any descriptions added to components.\nYou also have the ability to export any assets from the file using the\nExport\nfeature\nTHIS CODE IS NOT MEANT TO BE DIRECTLY COPY & PASTED, IT SHOULD BE USED AS A HELPFUL RESOURCE\nVideo for overview:\nhttps://youtu.be/B242nuM3y2s\nComponents:\nComponent usage is very important for both efficient design and development practices. Designers should be using components to build out their designs.\n(A.K.A. symbols in sketch)\nDefinition: \"\nComponents are elements you can reuse across your designs. They help to create and manage consistent designs across projects. You can create components from any layers or objects you've designed. These could be a whole range of things like buttons, icons, layouts, and more.\n\"\n—\nhttps://help.figma.com/hc/en-us/articles/360038662654-Guide-to-Components-in-Figma#:~:text=Components are elements you can,icons%2C layouts%2C and more\n.\nIn other words: Components are like puzzle pieces. A designer creates components, and reuses them as pieces of the design. If used correctly, developers should be able to create and style the components, and reuse them throughout the development process.\nUseful Video:\nhttps://youtu.be/k74IrUNaJVk?list=PLXDU_eVOJTx5LSjOmeBYMuvaa4UayfMe4\n‼ Designers ‼\nIf you haven't implemented components yet, it's okay! But it is important for you to transition your designs to be component-based.\nIf you are unsure of how to do this, here are some great resources to use to learn about all things component-based design!\nFigma.com's resources\nFigma defines component best practices\nIntroduction to component variants\nAuto Layout intro video\nThere are so many capabilities built into components!!!! I encourage you to learn more about using\nauto layout\n, creating variants, and swapping out components easily. If you struggle with something in Figma, chances are someone has also struggled with the same thing. The internet and\nfigma.com\nhave some really awesome resources to help make your design process more efficient!\n(P.S. reach out to your Chief Designer with any questions, they would love to help!)"
  },
  "Upcoming Events!": {
    "author": "frank",
    "branch": "All Generate",
    "hidden": "No",
    "tags": "All Must-read",
    "content": "Events with a `?` are still tentative: many events are yet to have times and locations announced, but this page will be updated when they are.\nPlease Slack @Chirag if you’re planning an event, so it can be added to the calendar and so that Engagement can help you with logistics.\nGenerate Event Calendar [Public]"
  },
  "Development Resources": {
    "author": "Anna Birge",
    "branch": "Hardware",
    "hidden": "No",
    "sub-page": "Basic KiCAD Use (Basic%20KiCAD%20Use%20150f18dd5a9480edbd43dd0321488003.md), Basic Git Use (Basic%20Git%20Use%20150f18dd5a9480efac4af0775bb6d1df.md), Schematic Best Practices (Schematic%20Best%20Practices%20150f18dd5a94803d8723fd92ffd4b363.md), PCB Design: Best Practices (PCB%20Design%20Best%20Practices%20150f18dd5a9480c0b5f7cd3e7944c5d1.md), Microcontroller Implementations (Microcontroller%20Implementations%20150f18dd5a9480908a9aede17ce0e2d3.md), Parts Selection (Parts%20Selection%20150f18dd5a948006864fd1d385a94b06.md)",
    "content": "to be updated"
  },
  "New Semester Onboarding": {
    "author": "frank, Jay Sella",
    "branch": "All Generate",
    "hidden": "No",
    "tags": "All Must-read",
    "content": "Members who were NOT in Generate last semester\nJoin our Slack\n(our most important form of communication)\nRequest Google Drive access\nto our “\nGeneral Access Generate\n” folder\nPlease use your\n@husky.neu.edu\nemail address\nInclude your full name, branch, team, and role in the access request\nRead our Notion\nHome\nReview the\nPages\nand your team-specific pages\nCheck out the\nSherman Center Notion\nfor more information about the Sherm!\nComplete the “All Members” onboarding\nin the next section below.\nAll Members\nComplete our\nGenerate Onboarding Form\nComplete our\nGenerate Career Connections Form\nIn our “Sherman Center” Slack workspace:\nJoin\n#generate-announcements\nand\n#all-sherm-announcements\nPersonalize your Slack profile:\nOn your computer, click your profile picture at the bottom left. Then click “Profile” to edit.\nSet your preferred full name, picture, role, pronouns, and\n@northeastern.edu\nemail address\nSet your “Team” as\n[BRANCH] - [TEAM]\n, eg:\nOperations - Strategy\nSend a Slack DM to your lead asking to be added to your team’s channels\nPeruse the channel list (left sidebar → More → Channels) and join other public channels you’re interested in\nReview our\nPages\n.\nWe revised these pages with new guidelines and resources in Fall 2024, so please re-review them."
  },
  "Rethinking the Sherman Center 🔗": {
    "author": "frank",
    "branch": "Sherman Center",
    "hidden": "No",
    "tags": "All Must-read, FAQ",
    "content": "‣"
  },
  "Attendance Policy": {
    "author": "frank",
    "branch": "All Generate",
    "hidden": "No",
    "tags": "All Must-read",
    "content": "Members may miss up to 3 meetings per semester.\nThe intent is that these are used as “sick days” (eg. for extenuating circumstances when you need a day off), not that every member uses all of them."
  },
  "Procurement + Reimbursements": {
    "author": "frank, Jay Sella",
    "branch": "Operations",
    "hidden": "No",
    "tags": "FAQ, Leads/Chiefs Must-read",
    "content": "Over the course of your time in Generate, you will likely need to purchase\nsomething\n. Perhaps a tool for a hardware project, stickers for an engagement event, a subscription for a software client, or catering for a morale event.\nThis guide is designed to help you understand our policies and procedures for making Generate-related purchases. If you have questions, ASK! → `#ops-help` on Slack.\nProcurement / Online Orders\nKey Takeaways:\n- All orders/procurement requests must be submitted via our FinOps Dashboard.\n- Plan ahead and know what items will need to be purchased as soon as possible. See When are orders placed? to ensure your orders are submitted on-time.\n- Routinely connect with your lead to ensure that your team’s resources are effectively allocated and in-line with your needs.\n- If you are a Director, Chief, or Lead, please make sure you also familiarize yourself with Digital Stewardship\n- TO SUBMIT AN ORDER, submit a request through our FinOps Dashboard.\nFAQs:\nWhat are our supported vendors?\nSupported vendors must be used whenever possible. We have tax-free accounts set up with these services and your items will be processed and arrive faster.\neBay is no longer a supported vendor.\n4imprint\nAdafruit\nAmazon\nAndyMark\nArduino\nCustom Ink\nDigiKey\nEasyEDA\nEdmund Optics\nFormlabs\nHarbor Freight\nHome Depot\nMcMaster-Carr\nMisumi\nMouser Electronics\nProlabs\nProtolabs\nSendCutSend\nServoCity\nSparkfun\nStepper Online\nSticker Mule\nULINE\nUS Plastics\nVevor\nVex Robotics\nVistaprint\nWaveShare\nXometry\nWhat if I want to place orders from other vendors?\nPlease use custom orders sparingly as they take much more time to set up.\nIn some cases, we are not able to order from certain vendors. See “\nHow does tax-exemption work?\n” above for one potential issue.\nBe aware that issues are common with custom orders.\nWhen are orders placed?\nThe Fall 2024 schedule requires all procurement/order requests to be submitted by\n7:30pm every Tuesday and Thursday\nto ensure same-day ordering. Reach out in\n#ops-help\non Slack with any questions in the meantime.\nAny orders not received on time will be submitted at the next scheduled date.\nWhere are orders shipped? Can my order be shipped to me?\nOrders may only be mailed to the Sherman Center. If necessary, orders may be shipped to the relevant lead following approval from Generate’s CFO or Operations Director.\nHow does tax-exemption work?\nAs a part of Northeastern University—and therefore the Sherman Center—we are tax-exempt\n.\nIf a company is unwilling to remove sales tax, we cannot order from them. No exceptions.\nWhat if I have an urgent order? / I need something ASAP!\nAn order is “urgent” if there is a legitimate, justifiable reason that it absolutely cannot wait to be placed until the next order date. See\nWhen are orders placed?\nIf the need for an urgent order arises, reach out in\n#ops-help\non Slack explaining the situation. Be sure to tag\nboth\nGenerate’s Operations Director and Chief Financial Officer. They will determine whether the urgent order is necessary.\nThe Operations Director and CFO reserve the right to deem orders as urgent or non-urgent in their sole discretion.\nIn most cases, weekend and holiday orders cannot be expedited due to the business nature of most vendors we utilize. Please consider this in your urgent request before reaching out.\nHow do I process a return?\nPolicies and timelines vary by vendor. The receiving team is responsible for notifying Operations on Slack (\n#ops-help\n) about the return to obtain the necessary labels. Please provide the original order ID and a description of all items to be returned. The receiving team is responsible for boxing and shipping out the return.\nReimbursements\nGenerally, all morale purchases must be paid for out-of-pocket and then reimbursed.\nProject materials should\nnever\nbe bought out-of-pocket.\nKey Takeaways:\n- Reimbursements requests must be submitted within 14 days of purchase.\n- Keep your itemized receipt! Without it, you cannot be reimbursed.\n- Reimbursements over $75 require prior approval from Generate’s CFO or Operations Director, unless morale-related.\n- Failure to do so may result in rejection of your reimbursement request.\n- Pay attention, and triple check your requests. Incomplete, inaccurate, or late submissions may be rejected and non-reimbursable.\n- TO SUBMIT A REIMBURSEMENT, submit a request through our FinOps Dashboard.\nFAQs:\nWhat can be reimbursed?\nMorale\n: Unless otherwise communicated, all\nmorale\nexpenses should be paid out-of-pocket and reimbursed by Generate.\nUrgent Project Materials\n:\nIf approved by your Director\n, urgent project materials\n$75 or less\nmay be purchased out-of-pocket and reimbursed by Generate. Urgent project materials over $75 must be approved by Generate’s CFO or Operations Director.\nAll other project material purchases must flow through our standard procurement policies\n.\nWhat is required?\nReimbursement Requests must…\nbe submitted\nwithin 14 days\nof the purchase.\ninclude a\nPDF\nof an\nitemized receipt\nshowing the vendor name, purchase date, items purchased, total price, and payment method.\nPlease take 2 extra seconds to find a clean and flat surface, take a clear picture, and crop photos to show just the receipt.\nHow long do reimbursements take?\nReimbursement requests take time. They must be processed by Generate, the Sherman Center, and Northeastern University, as well as either the USPS (physical checks are mailed if you don’t have direct deposit set up) or your bank.\nPlease be patient; this process usually takes\n3-4 weeks\n.\nQuestions or Issues?\nReach out in\n#ops-help\non Slack. We’re here to help!"
  },
  "Networking Dashboard": {
    "author": "Anna Birge",
    "branch": "Operations",
    "hidden": "No",
    "content": "Our Networking Dashboard is an internal resource containing past and current Generate member co-op and internship data. It aims to build connections and foster professional growth within Generate and alumni.\nAccess it here\n:\nhttps://lookerstudio.google.com/reporting/fe0f900a-5c51-455d-9d89-d50815b114de\nMake sure that you are logged into your @husky.neu.edu Google Drive account.\nFAQs\nWho has access to this resource?\nOnly current members of Generate can access this resource\nHow do I remove my data from this dashboard?\nTo remove any information, contact the Chief Data Solutions Officer, @Anna Birge. Please allow a turn around time of 48 hours for the update.\nHow do I add additional experiences or update existing ones?\nTo add any information, contact the Chief Data Solutions Officer, @Anna Birge. Please allow a turn around time of 48 hours for the update.\nWhere does this data come from?\nData from Fall 2024 was collected from a voluntary networking survey. From Spring 2024 onwards, data has been collected from onboarding forms.\nI have suggestions for features or a bug to report! What do I do?\nPlease contact @Anna Birge with any feedback! All feedback is welcome, especially bugs to report and suggestions for additional features."
  },
  "GitHub Permissions Structure": {
    "author": "Jay Sella",
    "branch": "Operations, Software",
    "hidden": "No",
    "content": "Generate operates a Github organization and Github account. All work related to Generate projects\nmust\nexist in and be owned by Generate’s organization.\nAccess shall be granted as follows:\nOrganization Owners\n: Generate email, Executive Director, Software Director, Operations Director\nOrganization Members\n: Software Chiefs, Project Leads, and Technical Leads\nOutside Collaborators\n: everyone else who needs access to one or more repositories\nEach collaborator can be assigned one of: read, triage, write, maintain, admin\nSoftware Engineers should be assigned\nWrite\nProduct Leads & Technical Leads should be assigned\nAdmin\nAdmin is the only role that can manage and invite members to a repository."
  },
  "EXP Makerspace": {
    "author": "Jay Sella",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Additional Resources (Additional%20Resources%20150f18dd5a9480b08e9debbd72440983.md)",
    "content": "The Sherman Center has an agreement with the\nEXP Makerspace\nthat allows our build teams to purchase materials from their Materials Shop. These purchases are directly billed to Generate and the Sherman Center at the end of each semester.\nPrices\nA\nprice list\nis published\nhere\n.\nPLA Material\nUntil further notice through fall 2024, it is Generate’s understanding that PLA material is\nfree\nwhen purchased through the EXP Makerspace. Consider making use of this for your projects.\nThis has the potential to benefit the Sherman Center, Generate, and our clients. That said, please steward these resources well as if you were purchasing them ordinarily.\nProcess\nCommunicate with your Project Lead to approve purchases and track budget expenses.\nWe will not receive a final bill until the\nend\nof the semester. Tracking expenses with your team at purchase time is crucial for managing your team’s budget.\nWhen purchasing items, mention that you are purchasing these items on behalf of Generate, part of the Sherman Center."
  },
  "Power Supplies": {
    "author": "Aaliyah Yan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Electric Component Library (Electric%20Component%20Library%2014bf18dd5a94803eaa2eeed1de225989.md)",
    "content": "Analog to Digital Voltage Adapters\n| Name | Use In / Use Case | Link |\n| --- | --- | --- |\n| 12V 100A 1200W DC\nSwitching Power\nSupply Adapter | AutoPasser\n|\n12V 100A 1200W DC Switching Power Supply Adapter PSU AC-DC 12Volt Industrial Transformer Converter 0-80/50amps LED Drive Lamp Meter Semiconductor Motor Pump Winch Stereos Amplifier Fan SMPS 110V/220V\n|\n| Enclosed AC DC Converters 2 Output 48V 5V 85 ~ 264 VAC, 120 ~ 370 VDC Input | Fufu Pot | L\nMF1500-20B48 | DigiKey Electronics\n|\n| New Version DC 12V 100A 1200W Power Supply Adapter 110V AC to 12V DC Converter Power Supply 12V 100A Switch Transformer for Motor Pump CCTV Security Camera Car Stereo 3D Printer and More 12V Device | SEBIK |\nNew Version DC 12V 100A 1200W Power Supply Adapter 110V AC to 12V DC Converter Power Supply 12V 100A Switch Transformer for Motor Pump CCTV Security Camera Car Stereo 3D Printer and More 12V Device\n|\nBatteries\n| Name | Used In / Use Case | Link |\n| --- | --- | --- |\n| Ebike Battery 48V 52V 60A 72V 10AH 18AH 20AH 30AH 50AH Lithium Ion / LiFePO4 Battery Pack with 3A/5A Charger,50A/80A BMS for 300W-4500W Motor | WaveWise |\nBtrPower Ebike Battery 48V 52V 60A 72V 10AH 18AH 20AH 30AH 50AH Lithium Ion / LiFePO4 Battery Pack with 3A/5A Charger,50A/80A BMS for 300W-4500W Motor\n|\n| H HAILONG 48v 36v Lithium Battery/36V Ebike Battery, ebike Battery 10AH 14AH 20AH 25AH with 2A Charger, T-Plug, XT60 Connector and 20A BMS for 250W-800W Ebike Battery/Ebike Kit | Cstar |\nhttps://www.amazon.com/dp/B0CBTWDKJM/ref=sspadkdetail1?pdrdi=B093STJTGB&pdrdw=yu2rx&content-id=amzn1.sym.d81b167d-1f9e-48b6-87d8-8aa5e473ea8c&pfrdp=d81b167d-1f9e-48b6-87d8-8aa5e473ea8c&pfrdr=Z4XV0EPQ8E6GFMDJH3N4&pdrdwg=8Riqf&pdrdr=84b09a74-f14b-47f0-a2a3-c31271da009b&s=sporting-goods&spcsd=d2lkZ2V0TmFtZT1zcF9kZXRhaWxfdGhlbWF0aWM&th=1\n|"
  },
  "Hosting Meaningful 1:1s": {
    "author": "Alix Heudebourg, Chirag Chadha, Jay Sella",
    "branch": "Engagement",
    "hidden": "No",
    "sub-page": "1:1 Templates (Hosting%20Meaningful%201%201s%200ca037bc4e6d453c9d19162d18160f7f/1%201%20Templates%2049acdbbbbedb46369f17eb679ae153e8.md)",
    "tags": "Leads/Chiefs Must-read",
    "content": "Frequency and Purpose\nYou’ll be meeting with members of your team one-on-one at least\nthree (3)\ntimes this semester. Each time, have a conversation with them. There isn’t a checklist to follow or a strict path you must take. Instead,\nit’s an opportunity to get to know your team members, figure out what they want to do, where they want to grow\n.\nFirst 1:1\nYour first 1:1 should take place within the first two weeks of the semester.\nThere’s a high likelihood that you won’t know most of the members joining your team this semester. Your first 1:1 is a chance for you to sit down and learn a few things about them.\nThis is also your time to talk to them about the project(s) they’ll be working on. Pay attention to which aspects they seem interested in.\nHere are a few starter questions to consider:\nWhy did they join / re-join Generate?\nWhat do they like to do outside of classes and clubs?\nWhat parts of the project resonate with them?\nAlso,\nask them what their goals for the semester are\nand\nwrite them down\n. A part of your role as a leader is knowing what people want to work on and giving them assignments that line up with those goals and interests. You want to be the person who is looking out for them and making sure they’re growing and developing the skills they want to hone. These can be personal (confidence), professional (documentation), or technical (engineering).\nIf they’re new to Generate, give them a tour of the Sherm so they know what the names of the different spaces are! See Spaces + Reservations for in-depth guide on our spaces\nMid-Semester 1:1\nNo better time to check in with your member than half way through the semester. Hopefully you’ve written down their goals from your first meeting and can check in with them. Ask:\nDo they feel like they’re building toward those goals?\nDo they feel connected with their team, their branch, and Generate as a whole?\nDo they want to keep working on the kind of stuff they’ve been doing?\nIn terms of how they’ve been working with other members, this is a good time to ask them about that! Determine if there any issues they’re facing on the team and if there are better ways you can support them as their lead.\nThis is the only direct feedback that you’ll be able to iterate upon to improve your team dynamics and efficiencies.\nTake good notes and try to see what you can do to improve your team.\nIf there are any points of improvements for them you wish to share, this is also a good time for them to hear it and have time to improve upon it.\nFinal 1:1\nYour final 1:1 should take place within the last two weeks of the semester.\nAt the end of the semester, you’ll host one last 1:1 with each team member to recap and close out the semester. This is a good time to gather feedback for your successor, to hype up your members about all the work they did, and to give words of wisdom/encouragement/whatever comes to you in the moment. Make sure to incorporate key learnings into your team’s internal handoff document.\nRevisit each members’ goals, and help them see how they progressed toward and achieved them. Give concrete examples to show your care and help them realize what might be difficult to see. Recognize any shortcomings and emphasize that those are okay. If applicable, offer potential future opportunities to hone the skills they want to refine, gain more experience/exposure, or build on their experience with your team. This could be a recommendation to explore other Generate teams/branches, courses, faculty, external resources, internships/co-ops, research, or events.\nIf genuine, encourage staying in touch. Exchange numbers and connect on LinkedIn if you haven’t already. Consider offering yourself as a resource for future class, co-op, or full-time decisions.\n1:1 Template\nHere’s a starting point for you all!\n1:1 Templates\nQuestions\nIf you have questions about what to discuss in a 1:1, how to broach a topic, or how to give feedback, reach out to your Director or any member of Generate’s Management team."
  },
  "Project Management Tools": {
    "author": "Abigail Kazan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Additional Resources (Additional%20Resources%20150f18dd5a9480b08e9debbd72440983.md)",
    "content": "If you have no idea where to start, and just want some software to help you organize your team, this page is for you! The recommendations go roughly in order from simplest to most powerful, but each has their own merits and reasons to choose one over another.\nClick one of the links to jump to that tool\nGoogle Sheets\nIn Google Sheets, you can use a Project Tasks table template to note every task that needs to be completed, by whom, and its priority. Then you can filter, slice, and pivot the table however you need. It’s a very flexible solution, and most people on your team have likely used Google Sheets already.\nGoogle Sheets: Online Spreadsheets & Templates | Google Workspace\nTrello\nKanban boards are helpful for seeing the status of all tasks for your project at a glance. Trello lets you build a team, assign tasks, and adjust their statuses while also including notes and details about each task in its card. They have a template to get you started, but it’s quite flexible and customizable too once you’ve learned what you need.\nProject Management\nSmartsheet\nIf just columns and cards don’t provide enough functionality, Smartsheet lets you rollup your data in many different ways— from Gantt charts to outlines to Kanban boards to tables! They have templates to get you started, and you can customize from there!\nSimple Agile Project\nNotion\nIf you want to build from scratch, Notion has all the components you need— and everyone in Generate already has an account! Like Smartsheet, you can create many views based on the same task data.\nFrom feature idea to launch in one tool"
  },
  "Flexible Spending Pool (FSP)": {
    "author": "Mika , Jay Sella",
    "branch": "Operations",
    "hidden": "No",
    "tags": "FAQ, Leads/Chiefs Must-read",
    "content": "Overview\nThis Spring, we are introducing the Flexible Spending Pool (FSP) which will be applied to all expenses, excluding hardware project materials and standard team morale expenses.\nBy implementing zero-based budgeting, we aim to:\nOptimize Resource Allocation\nEnhance transparency and predictability in budgeting decisions\nEnsure spending aligns with Generate’s missions and values\nTimeline/Process\nIdentify Team Goals\n: Teams should identify their goals at the start of the semester and routinely track and evaluate their effectiveness.\nAnticipate Expenses\n: Expenses must be proposed\nAT LEAST\n10 days in advance. Expense proposals can be submitted through this form:\nExpense Proposal Form\n. This form can also be found in the sidebar of the FinOps Dashboard under “Quicklinks”.\nProposal Review\n: Proposals will then be evaluated against a predefined set of evaluation criteria within one week, during weekly Procurement meetings: Tuesday and Thursday evenings.\nFinal Decision and Tracking\n: A final approval, approval with modification, or rejection will be communicated via Slack.\n*\nPlease note that we are unable to process purchases of gift cards\nEvaluation Criteria\nAll expense proposals will be evaluated on the following criteria, taking into consideration its alignment with\nGenerate’s goals, impact, feasibility, and fund availability\n.\nAlignment\n:\nHow closely does this expense align with:\nGenerate’s values: innovative, driven, empathetic, spirited, growth-oriented\nSherman Center’s values: intentional, developmental, inclusive\nImpact\n:\nWhat is the projected impact of this expense?\nEstimated Return on Investment (ROI)\nTargeted Audience and beneficiaries\nNumber of people positively impacted\nContribution to Generate’s goals, reach, and reputation\nEfficiency of the proposed spending\nFeasibility\n:\nWas the proposal submitted on time (two weeks in advance)?\nIs the timeline practical and achievable?\nFund Availability\n:\nCurrent funding pool status\nOpportunity Cost: Does this expense redirect funds from high-priority needs?\nQuestions?\nFor clarification or support, reach out in the\n#ops-help\nSlack channel. We’re here to help!"
  },
  "Downloading SamacSys Library Loader": {
    "author": "Aaliyah Yan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Software Installation and Setup (Software%20Installation%20and%20Setup%2014bf18dd5a948054ae9df39c601a5c44.md)",
    "content": "SamacSyS library loader is a powerful FREE tool that can be used to import footprint downloads from mouser directly into your ECAD software. This comes in handy, as it saves you the time of looking for the footprint and organizing it yourself. The only thing you need to do for this is set it to the right directory within the application settings.\nHead to the link below and\nscroll all the way down:\nSamacSys Library Loader\nThis program is also relatively easy to download. Run the executable file downloaded and you should be importing footprints like a pro!\nNote that this application will require you to create a SamacSys account."
  },
  "Mission, Values, & Priorities": {
    "author": "frank",
    "branch": "All Generate",
    "hidden": "No",
    "tags": "All Must-read, FAQ",
    "content": "Mission\nGenerate is a community of passionate individuals who engage in collaborative, real-world experiences to develop innovative products, the organization, its partners, and themselves.\nValues\nEverything in the Sherman Center must align by three values— being developmental, inclusive, and intentional.\nIn addition, Generate members are innovative, driven, empathetic, spirited, and growth-oriented.\nPriorities\nStructural Resilience\nIncrease the accessibility of leadership positions by distributing responsibilities across more of our members. Further support and foster member growth at all levels of Generate.\nOrganizational Identity\nCreate a stronger sense of belonging within teams and branches for all members. Increase the flow of feedback between members and leadership.\nOutcome Delivery\nContinue to improve our member’s learning and our project quality to ensure we can keep and capture talent and resources to ensure the organization’s continued success and longevity."
  },
  "LEDs": {
    "author": "Anna Birge",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Electric Component Library (Electric%20Component%20Library%2014bf18dd5a94803eaa2eeed1de225989.md)",
    "content": "LEDs"
  },
  "Team Structure for Collaboration": {
    "author": "frank",
    "branch": "Software",
    "hidden": "No",
    "parent page": "Breaking Silos (Breaking%20Silos%202d26a01f9689444bbb069f20491b80ac.md)",
    "content": "Below is a diagram of how teams are set up into multiple streams to complete work for the project.\nFeature Squads are made of at least one designer, one frontend-focused developer, and one backend-focused developer.\nTogether, these cross-disciplinary teams complete Stories, written by the PL, (aka Features).\nEngineering/Design Chapters are made of either all the engineers or all the designers on a team.\nTogether, Chapters work on Enablers, written by the TLs/DL, to complete work which helps the team better complete its work. This can include Brand Identity, Logos, Typography, Figma Component/Swatch setup, on the design side, and CI/CD, linting, automations, system architecture design, etc. on the engineering side.\nThe goal of this model is to get people to work together better than if each of them worked alone.\nOver management and/or bad management means people do less than they could have alone.\nOn the flip-side, “just enough” management means people do their best (and feel their best doing it)"
  },
  "Basic Git Use": {
    "author": "Aaliyah Yan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Development Resources (Development%20Resources%2014bf18dd5a9480dcb4cbfec87e0cb38b.md)",
    "content": "Intro to Git Workshop.pdf\nThe above workshop details all of the terminology and commands that you’ll need to use for Git in Generate\nFirst, make sure you have\nGit installed and setup on your machine\nIf you need to clone the remote repository to your machine\nIf you need to clone the remote repository to your machine\nNext, you’ll need to clone the remote repo onto your local machine. To do that:\nNavigate to the Github page for the repo that you want to use\nClick the green “ Code” dropdown button\nIf you have SSH keys installed and setup, click on the “SSH” tab, otherwise keep it on the “HTTPS” tab\nCopy the link shown\nOpen a terminal window on your computer and navigate to the directory where you want to clone the repo\nRun the following command:\njsx\ngit clone\nAssuming no errors show up, you’ve successfully cloned the repo!\nNow to actually use Git to track your project\nBefore doing any work, make sure that you’re on the correct Git branch.\nIf you’re not:\nIf you don’t have the correct branch on your machine:\nIn the terminal, run this command to see a list of all braches (local and remote)\njsx\ngit branch -a\nTo get a remote branch on your machine to do work, run\njsx\ngit fetch BRANCH_NAME\nIf you already fetched the branch and just need to switch to it, run\njsx\ngit switch BRANCH_NAME\nWhenever you make a significant change to a file (code, schematic, or layout), you’ll want to “commit” those changes to the remote repo. To do this:\nCommand Line:\nUse the following command to check what files have been changed\nThe names of changed files will be shown in red\njsx\ngit status\nTo add a file to the staging area (this is the area that tells git what files to actually track), run\njsx\ngit add FILE_NAME\nOnce you’ve added all of the files that you want to the staging area, run\njsx\ngit commit -m \"type a nice message here describing what was changed and why\"\nThen type the following command to push your changes to the remote repo\njsx\ngit push\nGitHub Desktop:\nMake sure that you only select the files that are important for everyone to have a copy of\nWrite a message in the box at the bottom left-hand corner of the app, and then hit the “commit” button"
  },
  "Sherm Hub 🔗": {
    "author": "frank",
    "branch": "Sherman Center",
    "hidden": "No",
    "tags": "FAQ"
  },
  "Advice for Morale": {
    "author": "Chirag Chadha, Josephine, Alix Heudebourg",
    "branch": "Engagement",
    "hidden": "No",
    "tags": "Leads/Chiefs Must-read",
    "content": "Morale Budget\nEncouraging a vibrant team culture is essential in creating an environment conducive to work and where members are comfortable with each other and in being themselves. One effective way to achieve this is by utilizing the morale budget\nwithin the initial month.\nThis means discussing and determining a date for morale in your first team meeting\n.\nPlease be mindful of branch and org-wide Upcoming Events! and ensure your morales do not overlap with them — these events serve as opportunities for members to engage within the Generate community.\nWhether it's hosting multiple smaller events, or planning one significant gathering, the goal is to transform these occasions into memorable experiences. It's crucial to emphasize that these events should transcend mere conveniences—aka simply ordering pizza for a team meeting—and instead\nbe engaging to solicit team bonding\n.\nEvent Diversity\nDiversifying activity types can further enhance team engagement.\nConsider options such as\nBoba outings, hotpot dinners, Boda Borg challenges, pizza parties, ice skating excursions, bowling nights, making a homemade dinner, and visits to TimeOut Market\n(see more below).\nTo ensure these events are well-received, make it a point to discuss potential ideas during your team meetings. In the end, this\nopportunity is designed to be low-stakes and easy going\n.\nAttendance\nIt's vital for team leaders (Chiefs and PLs) to encourage event attendance and lead by example.\nLeading by example by being involved and attending events often proves to be the most effective method for ensuring active participation organization-wide and within teams\nwhile f\nostering a sense of camaraderie.\nDiscuss the idea of walking together to events with your team members so that they feel more comfortable, especially as this is your first social outing.\nDon't forget the power of introductions and friendly reminders — facilitating connections among team members and with members across the organization helps create a more inclusive and tightly-knit culture.\nReimbursement\nMake sure to check out\nProcurement + Reimbursements\nfor info on our policies and processes for morale reimbursement.\nBudget Balances\nTeam leaders can view their remaining budget balances through our\nFinOps Dashboard\n.\nQuestions?\nReach out in\n#ops-help\non Slack. We’re here to help!\nMorale Ideas\n`pp` = cost per person\nMorale Ideas"
  },
  "Google Drive 🔗": {
    "author": "frank",
    "branch": "Operations",
    "hidden": "No"
  },
  "Use Slack Effectively": {
    "author": "Chirag Chadha",
    "branch": "Engagement",
    "hidden": "No",
    "tags": "All Must-read",
    "content": "Use threads for larger discussions\nThreads allow us to keep discussions organized and easier to follow for all stakeholders\nReact so people know you read their messages\n—\nhave fun with them!\nThink of Slack like a groupchat → we’re all here for a good time!\nOrganize your sidebar\n— this makes it easier to stay on top of messages\nSet up notifications for important channels\nYour\nteam\nchannel\nYour\nbranch\nchannel\ngenerate-announcements\nall-sherm-announcements\nUse “Save for Later” and “Remind me about this”\nto come back to important discussions that you can’t get to right now\nLearn more about how to use this feature: https://slack.com/help/articles/360042650274-Save-messages-and-files-for-later\nSave for later\nThere is also a sidebar for all the items you saved for later!\nRemind me about this"
  },
  "In-house Calendar Package": {
    "author": "Alder Whiteford",
    "hidden": "No",
    "parent page": "Dev Best Practice (Dev%20Best%20Practice%20365b0c30e6ac4885b80bf0a3e2f5749f.md)",
    "content": "@Alder Whiteford"
  },
  "Microcontroller Implementations": {
    "author": "Aaliyah Yan",
    "branch": "Hardware",
    "hidden": "No",
    "parent page": "Development Resources (Development%20Resources%2014bf18dd5a9480dcb4cbfec87e0cb38b.md)",
    "content": "Overview\nTypically any system that requires any sort of controls, computing, and telemetry will need some sort of microcontroller or system on chip (SoC). These come in a few different form factors with varying levels of customizability. This page will focus solely on choosing what form of microcontroller to implement.\nBare MCU or Carrier Board?\nBare MCU\nThe term “bare-metal programming” refers to programming without any operating system or resources to aid in the running of your program; although you gain fast access to register information and memory, there aren’t any safeguards or optimizations in place to aid your program in running.\nWhen I refer to a “bare MCU,” I am referring to a microcontroller unit implemented directly on a custom PCB, like in the picture below. I.e. you make the PCB and directly slap the chip on there and route/set up all the IO of the chip.\nThis reduces form factor incredibly and can result in much lower power draws, as well as being able to directly configure the IO of the chip to suit your needs. However, this adds additional complexity in implementation and flashing. This is also typically how most professional companies will end up doing it since they have the manpower to drive this additional complexity in development. You might also want to weigh the difficulty in manufacturing and try and spec an MCU that is relatively easy to solder (i.e. through drag soldering).\nCarrier Board\nWith microcontroller development boards, like an STM32 Nucleo board or a Teensy 4.1 (shown in pictures below), the bare MCU has already been implemented for you and all you need to do is route the IO of the board itself. The routing of the IO can be done through a “carrier” board.\nWith microcontroller development boards, like an STM32 Nucleo board or a Teensy 4.1 (shown in pictures below), the bare MCU has already been implemented for you and all you need to do is route the IO of the board itself. The routing of the IO can be done through a “carrier” board.\nThese development boards typically have a bunch of safety circuits and other chips onboard to aid development, such as an EEPROM, onboard activity LED, reset button, and maybe even an IC to handle flashing the chip. All of that would need to be manually implemented with a bare MCU. However, you lose out on the configurability, have to work with a much larger form factor, and usually end up with an overspec’ed microcontroller board because there are things that you will never need onboard.\n“Carrier” board for an STM32 dev board using vertical connectors, but can just be soldered in place to reduce height at the cost of ease of disassembly"
  },
  "Running an Engineering Meeting": {
    "author": "frank",
    "branch": "Software",
    "hidden": "No",
    "parent page": "Running Meetings (Running%20Meetings%20a9e22541dedd4d0c8ebef43c89521ea6.md)",
    "content": "Example Agenda (45 mins)\nEnabler prioritization and assignment (10 mins)\nTeam discusses most important Enablers to build, allocate work on building amongst themselves.\nFeatures ≠ Enablers; Features are work to be done that contributes to the end product. Enablers are work that contributes to the team’s future ability to complete work.\nCode review (30 mins)\nReview any code being merged from Feature branches into Dev; team discusses how to improve code and design quality\nBlocker removal (5+ mins, team members may leave if they have no out-standing blockers)\nTeam members discuss any blockers which need to be removed so that the engineers can continue to complete work"
  },
  "Suggested Meeting Cadence": {
    "author": "Alix Heudebourg, Erin Furey, frank",
    "branch": "Software",
    "hidden": "No",
    "parent page": "Running Meetings (Running%20Meetings%20a9e22541dedd4d0c8ebef43c89521ea6.md)",
    "content": "|\nMeeting\n|\nFrequency\n|\nDuration\n|\nPersonnel\n|\nDescription\n|\n| --- | --- | --- | --- | --- |\n| All-team | Weekly | 30 mins | All team members |\nWhole team aligns\n, eradicates shared blockers, bonds |\n| Engineering | Weekly | 15-60 mins | All engineers,\nPL optional\n| Engineers\nremove technical blockers\n, agree new on necessary tech enablers (automations, CI/CD fixes, standards, etc.),\nconduct code review\n|\n| Design | Weekly | 60+ mins | All designers,\nPL optional\n| Share completed assignments, receive feedback, brainstorm ideas,\nmake design decisions to move forward,\nassign new work |\n| Leads | Weekly | 10-30 mins | PL, TLs, DL | Leads align on progress, requirements, next work priorities |\n| Working Session | As needed | 120+ mins | All team members,\nPL optional\n| Team completes allocated work. User testing. |"
  },
  "Email Signature Template": {
    "author": "Jay Sella, Chirag Chadha",
    "branch": "All Generate",
    "hidden": "No",
    "content": "Video Tutorial\nhttps://www.loom.com/share/c285b0b3a6b340f4a91165e564e7173d?sid=dd4dfd73-2904-4b77-bd4c-4d995209ff68\nTemplate\n[Full Name]\n| [Your Title], Generate\nMichael J. and Ann Sherman Center for Engineering Entrepreneurship Education\n008C Hayden Hall | Northeastern University\nT: 617-373-3148 | M: [your phone number] | [your @northeastern.edu email address]\nExample"
  }
}